{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;\f2\fmodern\fcharset0 Courier;
\f3\froman\fcharset0 Times-Italic;\f4\fmodern\fcharset0 Courier-Bold;\f5\froman\fcharset0 Times-BoldItalic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1701\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1901\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid20}
{\list\listtemplateid21\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid21}
{\list\listtemplateid22\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat3\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid2101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid22}
{\list\listtemplateid23\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid23}
{\list\listtemplateid24\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat4\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid2301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid24}
{\list\listtemplateid25\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid25}
{\list\listtemplateid26\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid26}
{\list\listtemplateid27\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid27}
{\list\listtemplateid28\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid28}
{\list\listtemplateid29\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid29}
{\list\listtemplateid30\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid30}
{\list\listtemplateid31\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid31}
{\list\listtemplateid32\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid32}
{\list\listtemplateid33\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid33}
{\list\listtemplateid34\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid34}
{\list\listtemplateid35\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid35}
{\list\listtemplateid36\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid36}
{\list\listtemplateid37\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid37}
{\list\listtemplateid38\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid38}
{\list\listtemplateid39\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid39}
{\list\listtemplateid40\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid40}
{\list\listtemplateid41\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid4002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid41}
{\list\listtemplateid42\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid42}
{\list\listtemplateid43\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid43}
{\list\listtemplateid44\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid4301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid44}
{\list\listtemplateid45\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid45}
{\list\listtemplateid46\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid46}
{\list\listtemplateid47\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid47}
{\list\listtemplateid48\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid48}
{\list\listtemplateid49\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid49}
{\list\listtemplateid50\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid4901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid50}
{\list\listtemplateid51\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid51}
{\list\listtemplateid52\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid52}
{\list\listtemplateid53\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid53}
{\list\listtemplateid54\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid54}
{\list\listtemplateid55\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid55}
{\list\listtemplateid56\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid56}
{\list\listtemplateid57\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid57}
{\list\listtemplateid58\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid58}
{\list\listtemplateid59\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid59}
{\list\listtemplateid60\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid5901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid60}
{\list\listtemplateid61\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid61}
{\list\listtemplateid62\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid62}
{\list\listtemplateid63\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid63}
{\list\listtemplateid64\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid64}
{\list\listtemplateid65\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid65}
{\list\listtemplateid66\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid66}
{\list\listtemplateid67\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid67}
{\list\listtemplateid68\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid68}
{\list\listtemplateid69\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid6801\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid69}
{\list\listtemplateid70\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid6901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid70}
{\list\listtemplateid71\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid71}
{\list\listtemplateid72\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid72}
{\list\listtemplateid73\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid73}
{\list\listtemplateid74\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid74}
{\list\listtemplateid75\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid75}
{\list\listtemplateid76\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid76}
{\list\listtemplateid77\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid7602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid77}
{\list\listtemplateid78\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid78}
{\list\listtemplateid79\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid79}
{\list\listtemplateid80\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid7901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid80}
{\list\listtemplateid81\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid8001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid81}
{\list\listtemplateid82\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid8101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid82}
{\list\listtemplateid83\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid8201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid83}
{\list\listtemplateid84\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid8301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid84}
{\list\listtemplateid85\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid8401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid85}
{\list\listtemplateid86\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid8501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid86}
{\list\listtemplateid87\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid8601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid8602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid87}
{\list\listtemplateid88\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid8701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid88}
{\list\listtemplateid89\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid8801\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid8802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid89}
{\list\listtemplateid90\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid8901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid90}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}{\listoverride\listid21\listoverridecount0\ls21}{\listoverride\listid22\listoverridecount0\ls22}{\listoverride\listid23\listoverridecount0\ls23}{\listoverride\listid24\listoverridecount0\ls24}{\listoverride\listid25\listoverridecount0\ls25}{\listoverride\listid26\listoverridecount0\ls26}{\listoverride\listid27\listoverridecount0\ls27}{\listoverride\listid28\listoverridecount0\ls28}{\listoverride\listid29\listoverridecount0\ls29}{\listoverride\listid30\listoverridecount0\ls30}{\listoverride\listid31\listoverridecount0\ls31}{\listoverride\listid32\listoverridecount0\ls32}{\listoverride\listid33\listoverridecount0\ls33}{\listoverride\listid34\listoverridecount0\ls34}{\listoverride\listid35\listoverridecount0\ls35}{\listoverride\listid36\listoverridecount0\ls36}{\listoverride\listid37\listoverridecount0\ls37}{\listoverride\listid38\listoverridecount0\ls38}{\listoverride\listid39\listoverridecount0\ls39}{\listoverride\listid40\listoverridecount0\ls40}{\listoverride\listid41\listoverridecount0\ls41}{\listoverride\listid42\listoverridecount0\ls42}{\listoverride\listid43\listoverridecount0\ls43}{\listoverride\listid44\listoverridecount0\ls44}{\listoverride\listid45\listoverridecount0\ls45}{\listoverride\listid46\listoverridecount0\ls46}{\listoverride\listid47\listoverridecount0\ls47}{\listoverride\listid48\listoverridecount0\ls48}{\listoverride\listid49\listoverridecount0\ls49}{\listoverride\listid50\listoverridecount0\ls50}{\listoverride\listid51\listoverridecount0\ls51}{\listoverride\listid52\listoverridecount0\ls52}{\listoverride\listid53\listoverridecount0\ls53}{\listoverride\listid54\listoverridecount0\ls54}{\listoverride\listid55\listoverridecount0\ls55}{\listoverride\listid56\listoverridecount0\ls56}{\listoverride\listid57\listoverridecount0\ls57}{\listoverride\listid58\listoverridecount0\ls58}{\listoverride\listid59\listoverridecount0\ls59}{\listoverride\listid60\listoverridecount0\ls60}{\listoverride\listid61\listoverridecount0\ls61}{\listoverride\listid62\listoverridecount0\ls62}{\listoverride\listid63\listoverridecount0\ls63}{\listoverride\listid64\listoverridecount0\ls64}{\listoverride\listid65\listoverridecount0\ls65}{\listoverride\listid66\listoverridecount0\ls66}{\listoverride\listid67\listoverridecount0\ls67}{\listoverride\listid68\listoverridecount0\ls68}{\listoverride\listid69\listoverridecount0\ls69}{\listoverride\listid70\listoverridecount0\ls70}{\listoverride\listid71\listoverridecount0\ls71}{\listoverride\listid72\listoverridecount0\ls72}{\listoverride\listid73\listoverridecount0\ls73}{\listoverride\listid74\listoverridecount0\ls74}{\listoverride\listid75\listoverridecount0\ls75}{\listoverride\listid76\listoverridecount0\ls76}{\listoverride\listid77\listoverridecount0\ls77}{\listoverride\listid78\listoverridecount0\ls78}{\listoverride\listid79\listoverridecount0\ls79}{\listoverride\listid80\listoverridecount0\ls80}{\listoverride\listid81\listoverridecount0\ls81}{\listoverride\listid82\listoverridecount0\ls82}{\listoverride\listid83\listoverridecount0\ls83}{\listoverride\listid84\listoverridecount0\ls84}{\listoverride\listid85\listoverridecount0\ls85}{\listoverride\listid86\listoverridecount0\ls86}{\listoverride\listid87\listoverridecount0\ls87}{\listoverride\listid88\listoverridecount0\ls88}{\listoverride\listid89\listoverridecount0\ls89}{\listoverride\listid90\listoverridecount0\ls90}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Amazing\'97thanks for the code drop. I read through the three bundles and mapped them to the research roadmap so we can wire features precisely where they belong.\
Below is a 
\f1\b refined, file\uc0\u8209 aware roadmap
\f0\b0  with 
\f1\b surgical code changes
\f0\b0  (diffs/snippets) for the current Mesh/Agora codebase. I cite your files inline so you can see exactly what I\'92m building on.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 0) What\'92s already in place (from your code)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Move API
\f0\b0 : 
\f2\fs26 POST /api/dialogue/move
\f0\fs24  already accepts 
\f2\fs26 kind: 'ASSERT'|'WHY'|'GROUNDS'|'RETRACT'|'CONCEDE'|'CLOSE'
\f0\fs24 , synthesizes acts (including 
\f2\fs26 daimon
\f0\fs24  for 
\f2\fs26 CLOSE
\f0\fs24 ), dedups via a 
\f1\b signature
\f0\b0 , compiles designs, and optionally steps the interaction; it emits bus events (
\f2\fs26 dialogue:changed
\f0\fs24 , 
\f2\fs26 dialogue:moves:refresh
\f0\fs24 ). It also normalizes 
\f2\fs26 CONCEDE
\f0\fs24  to 
\f2\fs26 ASSERT
\f0\fs24  with 
\f2\fs26 payload.as='CONCEDE'
\f0\fs24 . The payload leverages 
\f2\fs26 locusPath
\f0\fs24 , and there\'92s a TTL for 
\f2\fs26 WHY
\f0\fs24 . \
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Legal\uc0\u8209 moves API (basic)
\f0\b0 : 
\f2\fs26 GET /api/dialogue/legal-moves
\f0\fs24  currently:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lists 
\f1\b GROUNDS
\f0\b0  for open CQs (by key),\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 allows 
\f1\b WHY
\f0\b0  when there is no open WHY for that key,\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 always offers 
\f1\b CONCEDE
\f0\b0  and 
\f1\b RETRACT
\f0\b0 ,\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 optionally offers 
\f1\b CLOSE (\'86)
\f0\b0  when stepper hints the locus is closable (via 
\f2\fs26 daimonHints
\f0\fs24 ).\uc0\u8232 This is a great skeleton to formalize R\u8209 rules, relevance hints, and \'93force\'94 classification. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open CQ helper
\f0\b0 : 
\f2\fs26 /api/dialogue/open-cqs
\f0\fs24  returns the set of open CQ keys for a target (WHY not yet answered by later GROUNDS). \
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dialogue \'93forum\'94
\f0\b0 : 
\f2\fs26 /api/dialogue/forum
\f0\fs24  threads 
\f2\fs26 ASSERT/WHY/GROUNDS
\f0\fs24  by nearest prior 
\f2\fs26 ASSERT
\f0\fs24  with same 
\f2\fs26 locusId
\f0\fs24 . (Good quick view; we\'92ll tighten this once we record explicit reply targets.) \
\ls1\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lib building blocks
\f0\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls1\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lib/dialogue/moves.ts
\f0\fs24  centralizes 
\f1\b signatures
\f0\b0  and 
\f1\b act synthesis
\f0\b0 ; 
\f2\fs26 CLOSE
\f0\fs24  produces daimon. Use this to keep POST signature logic consistent across endpoints. \
\ls1\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lib/dialogue/legalMoves.ts
\f0\fs24  and 
\f2\fs26 lib/dialogue/legalAttacks.ts
\f0\fs24  already detect 
\f1\b shapes
\f0\b0  (conditional, \uc0\u8704 /\u8707 , disjunction, conjunction, 
\f1\b presupposition
\f0\b0  cue) and propose 
\f1\b attack templates
\f0\b0 \'97perfect to enrich 
\f2\fs26 /legal-moves
\f0\fs24  with 
\f1\b R\uc0\u8209 shaped
\f0\b0  options and 
\f1\b presupposition challenges
\f0\b0 . \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls1\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 BAF/AF infra
\f0\b0  and 
\f1\b selection
\f0\b0  (VAF\uc0\u8209 adjacent) are present via 
\f2\fs26 lib/deepdive/*
\f0\fs24 . Prisma has 
\f1\b Argument/ArgumentEdge
\f0\b0  (+ 
\f2\fs26 EdgeType support|rebut|undercut|concede
\f0\fs24 ) and helpers to derive 
\f1\b ClaimEdge
\f0\b0  rows. We\'92ll reuse these for 
\f1\b support edges
\f0\b0  and AF reductions. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 1) Phase 1 \'97 Protocol hardening (R1\'96R7), force chips, and status\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Goal:
\f0\b0  Make the existing endpoints enforce the liberal protocol (explicit replies; attack vs surrender; no self\uc0\u8209 reply; no duplicates; no attack after surrender; R7 acceptance guard), expose 
\f1\b turn
\f0\b0  and 
\f1\b branch status
\f0\b0 , and annotate 
\f1\b legal moves
\f0\b0  with 
\f1\b force
\f0\b0  and 
\f1\b relevance
\f0\b0  hints.\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 1.1 Add explicit reply targeting (non\uc0\u8209 breaking)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Body
\f0\b0  (optional, additive) for 
\f2\fs26 POST /api/dialogue/move
\f0\fs24 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls2\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 replyToMoveId?: string
\f0\fs24 \
\ls2\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 replyTarget?: 'claim'|'argument'|'premise'|'link'|'presupposition'
\f0\fs24 \uc0\u8232 If absent, we keep current 
\f2\fs26 targetType/targetId + payload.locusPath
\f0\fs24  behavior. (UI can start sending 
\f2\fs26 replyToMoveId
\f0\fs24  when available.)\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Why now? It lets us enforce per\uc0\u8209 move invariants (R4 \'93no duplicate reply to this exact target\'94 and R5 \'93no attack after surrender on 
\f3\i this
\f0\i0  node\'94) without disturbing your current \'93targetType/targetId\'94 shape.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 Minimal zod tweak (excerpt)
\f0\b0 :\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 // app/api/dialogue/move/route.ts\
const Body = z.object(\{\
  deliberationId: z.string().min(1),\
  targetType: z.enum(['argument','claim','card']),\
  targetId: z.string().min(1),\
  kind: z.enum(['ASSERT','WHY','GROUNDS','RETRACT','CONCEDE','CLOSE']),\
  payload: z.any().optional(),\
  autoCompile: z.boolean().optional().default(true),\
  autoStep: z.boolean().optional().default(true),\
  phase: z.enum(['focus-P','focus-O','neutral']).optional().default('neutral'),\
  // \uc0\u55357 \u56391  new, optional\
  replyToMoveId: z.string().optional(),\
  replyTarget: z.enum(['claim','argument','premise','link','presupposition']).optional(),\
\});\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 1.2 Enforce R\uc0\u8209 rules at the API boundary\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 Create a small validator that runs 
\f1\b before insert
\f0\b0  and returns 
\f1\b reason codes
\f0\b0 . The checks rely on:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 replyToMoveId
\f0\fs24  when present (precise),\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 else fallback to 
\f2\fs26 targetType/targetId
\f0\fs24  + current 
\f1\b branch state
\f0\b0  and 
\f1\b open CQ map
\f0\b0  (which you already compute in 
\f2\fs26 /legal-moves
\f0\fs24  and 
\f2\fs26 /open-cqs
\f0\fs24 ). \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 Reason codes (suggested)
\f0\b0 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R1_TURN_VIOLATION
\f0\fs24 \
\ls4\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R2_INVALID_SHAPE
\f0\fs24  (e.g., GROUNDS without open WHY for key)\
\ls4\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R3_SELF_REPLY
\f0\fs24 \
\ls4\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R4_DUPLICATE_REPLY
\f0\fs24 \
\ls4\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R5_AFTER_SURRENDER
\f0\fs24 \
\ls4\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R6_INITIAL_MOVE_VIOLATION
\f0\fs24 \
\ls4\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R7_ACCEPT_ARGUMENT_REQUIRED
\f0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 Validator stub (drop\uc0\u8209 in)
\f0\b0 :\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 // lib/dialogue/validate.ts\
export type ReasonCode = 'R1_TURN_VIOLATION'|'R2_INVALID_SHAPE'|'R3_SELF_REPLY'|\
  'R4_DUPLICATE_REPLY'|'R5_AFTER_SURRENDER'|'R6_INITIAL_MOVE_VIOLATION'|'R7_ACCEPT_ARGUMENT_REQUIRED';\
\
export async function validateMove(input: \{\
  deliberationId: string;\
  actorId: string;\
  kind: 'ASSERT'|'WHY'|'GROUNDS'|'RETRACT'|'CONCEDE'|'CLOSE';\
  targetType: 'argument'|'claim'|'card';\
  targetId: string;\
  replyToMoveId?: string | null;\
  replyTarget?: string | null;\
  payload: any;\
\}) : Promise<\{ ok: true \} | \{ ok: false; reasons: ReasonCode[] \}> \{\
  const reasons: ReasonCode[] = [];\
\
  // R3 self-reply (when precise replyTo available)\
  if (input.replyToMoveId) \{\
    const m = await prisma.dialogueMove.findUnique(\{ where: \{ id: input.replyToMoveId \}, select: \{ actorId: true, kind: true, payload: true \}\});\
    if (m && m.actorId === input.actorId) reasons.push('R3_SELF_REPLY');\
\
    // R7: trying to CONCEDE \uc0\u966  after ARGUE that answered a WHY \u966  \u8594  must ACCEPT_ARGUMENT instead\
    if ((input.kind === 'CONCEDE' || input.payload?.as === 'CONCEDE') && m?.kind === 'GROUNDS') \{\
      // (You can refine by checking that m is the answer to a WHY for same cq/key/claim)\
      reasons.push('R7_ACCEPT_ARGUMENT_REQUIRED');\
    \}\
  \}\
\
  // R4 duplicate reply (signature already helps for WHY/GROUNDS; enforce for others)\
  // Quick check: is there an existing move with same signature or same (replyToMoveId, kind, replyTarget)?\
  // ... add your query here ...\
\
  // R5: no attack after surrender \'97 if target is surrendered/closed, block WHY/GROUNDS/ASSERT (attacks)\
  // ... read branch state cache or scan for recent CONCEDE/CLOSE on same node/locus ...\
\
  // R1, R2, R6 can be layered here or in Phase 1.3 (legal-moves)\
  return reasons.length ? \{ ok:false, reasons \} : \{ ok:true \};\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 Then in 
\f2\fs26 POST /api/dialogue/move
\f0\fs24 :\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 const legal = await validateMove(\{ deliberationId, actorId, kind, targetType, targetId, replyToMoveId, replyTarget, payload \});\
if (!('ok' in legal) || !legal.ok) \{\
  return NextResponse.json(\{ ok:false, reasonCodes: legal.reasons \}, \{ status: 409 \});\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \uc0\u9989  This places 
\f1\b R7
\f0\b0  exactly where your code already maps 
\f2\fs26 CONCEDE
\f0\fs24  to 
\f2\fs26 ASSERT\'85as='CONCEDE'
\f0\fs24 , so we can convert the attempted concession into an 
\f2\fs26 ACCEPT_ARGUMENT
\f0\fs24  flow in the UI (see 1.4).\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 1.3 Upgrade 
\f4\fs30\fsmilli15210 /api/dialogue/legal-moves
\f1\fs28 : force + relevance + shapes\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 We\'92ll 
\f1\b enrich
\f0\b0  the existing endpoint instead of introducing a new one.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f2\fs26 force: 'ATTACK'|'SURRENDER'|'NEUTRAL'
\f0\fs24 .\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f2\fs26 relevance: 'likely'|'unlikely'|null
\f0\fs24  (soft relevance).\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For 
\f2\fs26 targetType='claim'|'argument'
\f0\fs24 , look up the 
\f1\b text
\f0\b0  and feed it into 
\f2\fs26 lib/dialogue/legalMoves
\f0\fs24  or 
\f2\fs26 legalAttacks
\f0\fs24  to provide shape\uc0\u8209 specific prompts (including 
\f1\b presupposition challenge
\f0\b0 ). \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 Diff sketch
\f0\b0 :\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 // app/api/dialogue/legal-moves/route.ts\
type Move = \{\
  kind: 'ASSERT'|'WHY'|'GROUNDS'|'RETRACT'|'CONCEDE'|'CLOSE';\
  label: string;\
  payload?: any;\
  disabled?: boolean;\
  reason?: string;\
  // \uc0\u55357 \u56391  new\
  force?: 'ATTACK'|'SURRENDER'|'NEUTRAL';\
  relevance?: 'likely'|'unlikely'|null;\
\};\
\
...\
// Fetch target text to detect shapes\
let targetText: string | null = null;\
if (targetType === 'claim') \{\
  const row = await prisma.claim.findUnique(\{ where: \{ id: targetId \}, select: \{ text: true \}\});\
  targetText = row?.text ?? null;\
\} else if (targetType === 'argument') \{\
  const row = await prisma.argument.findUnique(\{ where: \{ id: targetId \}, select: \{ text: true \}\});\
  targetText = row?.text ?? null;\
\}\
// Derive shape-based suggestions (optional: merge into WHY label choices)\
if (targetText) \{\
  const \{ on, options \} = legalAttacksFor(targetText); // from lib/dialogue/legalMoves.ts\
  // e.g., if on === 'presupposition', push a WHY with a "Challenge presupposition" label\
\}\
\
...\
// force tagging\
for (const m of moves) \{\
  if (m.kind === 'WHY' || m.kind === 'GROUNDS') m.force = 'ATTACK';\
  else if (m.kind === 'CONCEDE' || m.kind === 'RETRACT' || m.kind === 'CLOSE') m.force = 'SURRENDER';\
  else m.force = 'NEUTRAL';\
\}\
\
// soft relevance (cheap): if a branch is already "closed", any ATTACK is unlikely relevant\
for (const m of moves) \{\
  m.relevance = m.force === 'ATTACK' ? (/* open? */ 'likely' : 'unlikely') : null;\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 You already compute 
\f2\fs26 CLOSE (\'86)
\f0\fs24  legality from 
\f2\fs26 stepInteraction
\f0\fs24 \'97we\'92ll keep that as is and simply tag 
\f1\b force
\f0\b0 .\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 1.4 R7 UX: offer Accept Argument instead of Concede \uc0\u981 \
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 In the 
\f1\b composer UI
\f0\b0  (where you render the 
\f2\fs26 /legal-moves
\f0\fs24  list), when a 
\f2\fs26 CONCEDE
\f0\fs24  is 
\f1\b disabled
\f0\b0  due to 
\f2\fs26 R7_ACCEPT_ARGUMENT_REQUIRED
\f0\fs24 , present an 
\f1\b ACCEPT_ARGUMENT
\f0\b0  action that posts:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 // POST /api/dialogue/move\
// keep existing shape, but mark as acceptance\
\{ kind: 'ASSERT', payload: \{ as:'ACCEPT_ARGUMENT', locusPath, expression: 'accept: <arg-id or brief>' \} \}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 This reuses your 
\f1\b ASSERT
\f0\b0  path and signatures while distinguishing in 
\f2\fs26 payload.as
\f0\fs24 . Later, we can add a first\uc0\u8209 class 
\f2\fs26 kind: 'ACCEPT_ARGUMENT'
\f0\fs24  enum once DB/everything is ready.\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 1.5 Dialogue status endpoint for clients\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 Add:\uc0\u8232 
\f2\fs26 GET /api/dialogues/[id]/status
\f0\fs24  \uc0\u8594  
\f2\fs26 \{ turnHolders: string[]; branches: Array<\{ locusPath: string; open: boolean \}>; terminatedFor?: string[] \}
\f0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Turn model: after move 2, include 
\f1\b both participants
\f0\b0  (you already pass 
\f2\fs26 phase
\f0\fs24  and use stepper; we\'92ll keep turn logic simple and auditable in this endpoint).\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A simple 
\f1\b branch
\f0\b0  cache can be derived by scanning latest 
\f1\b surrender
\f0\b0  vs 
\f1\b attack
\f0\b0  events per locus (or by asking the stepper for 
\f2\fs26 daimonHints
\f0\fs24  and open loci). \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 2) Phase 2 \'97 Commitments (use what you have) + viewer\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 You already 
\f1\b apply to the Commitment Store
\f0\b0  in 
\f2\fs26 POST /api/dialogue/answer-and-commit
\f0\fs24 , calling 
\f2\fs26 applyToCS
\f0\fs24  and emitting events (dialogue CS refresh). Let\'92s reuse that path rather than invent a new table right now.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add: 
\f2\fs26 GET /api/dialogue/commitments?deliberationId=\'85&owner=Proponent|Opponent
\f0\fs24  to return the 
\f1\b current CS
\f0\b0  snapshot (adapter around 
\f2\fs26 applyToCS
\f0\fs24 \'92s storage schema).\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI: 
\f1\b commitments popover
\f0\b0  on participant chips (lists entries; show \'93via argument \'85\'94 when we have a justification ref).\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Later, if we do persist CS to Prisma, we can keep the adapter API stable.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 3) Phase 3 \'97 Relevance (soft now, strict later)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Soft relevance
\f0\b0  is already wired in 1.3.\
\ls8\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Strict relevance auditor
\f0\b0 : a small worker that simulates whether a candidate move could change the 
\f1\b dialogical status
\f0\b0 ; annotate moves with 
\f2\fs26 strictRelevant: boolean
\f0\fs24  asynchronously and emit 
\f2\fs26 dialogue:status:refresh
\f0\fs24 .\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Nothing in your current endpoints conflicts with this; we only add the 
\f1\b annotation channel
\f0\b0 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 4) Phase 4 \'97 Values (VAF) + Support (BAF)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 We can stand this up quickly with models and libs you already have:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Arguments & edges
\f0\b0 : Prisma models (
\f2\fs26 Argument
\f0\fs24 , 
\f2\fs26 ArgumentEdge
\f0\fs24 , 
\f2\fs26 EdgeType support|rebut|undercut|concede
\f0\fs24 ) and claim\uc0\u8209 edge helpers are present. We\'92ll use these to power 
\f1\b support
\f0\b0  relations in the UI and propagate them into the 
\f1\b AF projection
\f0\b0  when desired. \
\ls9\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AF engine
\f0\b0  (
\f2\fs26 lib/argumentation/afEngine.ts
\f0\fs24 ) and 
\f1\b selection
\f0\b0  (
\f2\fs26 lib/deepdive/selection.ts
\f0\fs24 ) are ready to compute preferred extensions / viewers for RightRail. We\'92ll add a minimal 
\f1\b Audience
\f0\b0  store + ordering and compute 
\f1\b objective/subjective acceptance
\f0\b0  tags. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 5) Phase 5 \'97 Presuppositions & divergence (Ludics polish)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\f0\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You already detect 
\f1\b presupposition cues
\f0\b0  in 
\f2\fs26 lib/dialogue/legalMoves.ts
\f0\fs24 . We will:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls10\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 surface a \'93
\f1\b Challenge presupposition
\f0\b0 \'94 legal option in 
\f2\fs26 /legal-moves
\f0\fs24 ,\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 add a 
\f2\fs26 replyTarget: 'presupposition'
\f0\fs24  when the user picks it, so analytics and guards can reason about it. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Divergence
\f0\b0 : when a reply maps to 
\f1\b no valid locus
\f0\b0  (no dual), return a gentle \'93repair\'94 reason from the validator and show a rephrase prompt. (The stepper/daimon hints you\'92re already using will help here.) \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 6) Phase 6 \'97 Asymmetric burden of proof (room pref)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f0\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f2\fs26 prefs.asymmetricProof
\f0\fs24  on the deliberation/room and switch aggregation rules in the 
\f1\b status
\f0\b0  computation. (No API changes to 
\f2\fs26 /move
\f0\fs24 ; only status/outcome labels change.)\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 7) Phase 7 \'97 Exports (AIF, DSS/DML)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0
\f0\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 With 
\f1\b Argument/Claim/Edges
\f0\b0  and 
\f1\b DialogueMove
\f0\b0  in place, the exporter can be added as two GET endpoints that traverse your existing graph and pack I/S nodes (AIF) and DSS/DML instances.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 8) \'93Glue\'94 changes (diff\uc0\u8209 style) you can drop in now\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 8.1 Strengthen signature & unique index\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 You\'92re already relying on a composite unique 
\f2\fs26 (deliberationId, signature)
\f0\fs24  (see 
\f2\fs26 dm_unique_signature
\f0\fs24  usage). Double\uc0\u8209 check Prisma has that 
\f1\b unique
\f0\b0  declared on 
\f2\fs26 DialogueMove
\f0\fs24 . If not, add:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 // schema.prisma\
model DialogueMove \{\
  id              String   @id @default(cuid())\
  deliberationId  String\
  targetType      String\
  targetId        String\
  kind            String\
  payload         Json?\
  actorId         String\
  signature       String   // sha or compact signature\
\
  createdAt       DateTime @default(now())\
\
  @@unique([deliberationId, signature], name: "dm_unique_signature")\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 This matches the P2002 handling in 
\f2\fs26 POST /api/dialogue/move
\f0\fs24 .\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 8.2 Extend 
\f4\fs30\fsmilli15210 /legal-moves
\f1\fs28  with force/relevance and shape prompts\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs26 \cf0  // app/api/dialogue/legal-moves/route.ts\
+ import \{ legalAttacksFor \} from '@/lib/dialogue/legalMoves';\
\
 type Move = \{\
   kind: 'ASSERT'|'WHY'|'GROUNDS'|'RETRACT'|'CONCEDE'|'CLOSE';\
   label: string;\
   payload?: any;\
   disabled?: boolean;\
   reason?: string;\
+  force?: 'ATTACK'|'SURRENDER'|'NEUTRAL';\
+  relevance?: 'likely'|'unlikely'|null;\
 \};\
\
 export async function GET(req: NextRequest) \{\
   ...\
+  // fetch target text\
+  let targetText: string | null = null;\
+  if (targetType === 'claim') \{\
+    const row = await prisma.claim.findUnique(\{ where: \{ id: targetId \}, select: \{ text: true \}\});\
+    targetText = row?.text ?? null;\
+  \} else if (targetType === 'argument') \{\
+    const row = await prisma.argument.findUnique(\{ where: \{ id: targetId \}, select: \{ text: true \}\});\
+    targetText = row?.text ?? null;\
+  \}\
\
   const moves: Move[] = [];\
   ...\
   // existing WHY/GROUNDS/CONCEDE/RETRACT/CLOSE logic\
\
+  // mark force\
+  for (const m of moves) \{\
+    m.force = (m.kind === 'WHY' || m.kind === 'GROUNDS') ? 'ATTACK'\
+            : (m.kind === 'CONCEDE' || m.kind === 'RETRACT' || m.kind === 'CLOSE') ? 'SURRENDER'\
+            : 'NEUTRAL';\
+  \}\
+  // soft relevance\
+  const branchOpen = true; // TODO: compute from branch cache or last surrender\
+  for (const m of moves) m.relevance = m.force === 'ATTACK' ? (branchOpen ? 'likely' : 'unlikely') : null;\
\
+  // shape-based prompts (presuppositions etc.)\
+  if (targetText) \{\
+    const \{ on, options \} = legalAttacksFor(targetText);\
+    if (on === 'presupposition') \{\
+      moves.unshift(\{ kind:'WHY', label:'Challenge presupposition', payload:\{ cqId:'presup' \}, force:'ATTACK', relevance:'likely' \});\
+    \}\
+    // (optionally add finer-grained WHY labels based on options[])\
+  \}\
   return NextResponse.json(\{ ok:true, moves \}, \{ headers: \{ 'Cache-Control': 'no-store' \} \});\
 \}\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 8.3 Add validator call to 
\f4\fs30\fsmilli15210 /move
\f1\fs28  (R\uc0\u8209 rules)\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs26 \cf0  // app/api/dialogue/move/route.ts\
+ import \{ validateMove \} from '@/lib/dialogue/validate';\
\
 // actor\
 const userId = await getCurrentUserId().catch(() => null);\
 const actorId = String(userId ?? 'unknown');\
\
+ // R-rules guard\
+ const legal = await validateMove(\{\
+   deliberationId, actorId, kind, targetType, targetId,\
+   replyToMoveId: (parsed.data as any).replyToMoveId,\
+   replyTarget: (parsed.data as any).replyTarget ?? null,\
+   payload\
+ \});\
+ if (!('ok' in legal) || !legal.ok) \{\
+   return NextResponse.json(\{ ok:false, reasonCodes: legal.reasons \}, \{ status: 409 \});\
+ \}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 9) Forum threading (quick win)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 Your 
\f2\fs26 /api/dialogue/forum
\f0\fs24  currently attaches 
\f2\fs26 WHY/GROUNDS
\f0\fs24  to the nearest prior 
\f2\fs26 ASSERT
\f0\fs24  with the same 
\f2\fs26 locusId
\f0\fs24 . Once 
\f2\fs26 replyToMoveId
\f0\fs24  lands, switch to that (with fallback to 
\f2\fs26 locusId
\f0\fs24 ). This aligns the visible tree with the 
\f1\b explicit reply
\f0\b0  structure our legality engine uses.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 10) Acceptance checklist (for this pass)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R7 guard
\f0\b0 : Attempting 
\f2\fs26 CONCEDE \uc0\u966 
\f0\fs24  immediately after an 
\f2\fs26 ARGUE
\f0\fs24  answering 
\f2\fs26 WHY \uc0\u966 
\f0\fs24  returns 
\f2\fs26 409
\f0\fs24  with 
\f2\fs26 reasonCodes:['R7_ACCEPT_ARGUMENT_REQUIRED']
\f0\fs24 ; UI offers 
\f1\b Accept Argument
\f0\b0  alternative. \
\ls13\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No self\uc0\u8209 reply / no duplicate reply / no attack after surrender
\f0\b0 : guarded via 
\f2\fs26 validateMove()
\f0\fs24  with precise reasons; dedup remains via signature.\
\ls13\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Legal\uc0\u8209 moves
\f0\b0  shows 
\f1\b force
\f0\b0  and 
\f1\b soft relevance
\f0\b0 ; includes 
\f1\b presupposition
\f0\b0  challenge when detected from target text.\
\ls13\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Status
\f0\b0  endpoint returns 
\f1\b turn holders
\f0\b0  (after move 2, both) and 
\f1\b branch open/close
\f0\b0 . (\'86 remains surfaced from stepper hints.) \
\ls13\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Commitments
\f0\b0 : a read endpoint reflects updates made by 
\f2\fs26 answer-and-commit
\f0\fs24 . \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 11) What I\'92ll use next from your code (to keep momentum)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls14\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prisma models
\f0\b0  for Arguments/Edges/Claims to stand up 
\f1\b support edges
\f0\b0  and the AF projection for RightRail acceptance chips. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls14\ilvl0
\f4\b\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lib/argumentation/afEngine.ts
\f1\fs24  + 
\f4\fs26 lib/deepdive/selection.ts
\f0\b0\fs24  to compute viewer sets and integrate the 
\f1\b Audience
\f0\b0  lens for VAF. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Want me to produce the concrete 
\f4\fs30\fsmilli15210 validateMove()
\f1\fs28  with queries tailored to your tables (including R5 \'93surrendered/closed\'94 detection by scanning recent 
\f4\fs30\fsmilli15210 CONCEDE|CLOSE
\f1\fs28  on the 
\f5\i same
\f1\i0  target/locus) and the 
\f4\fs30\fsmilli15210 /dialogues/[id]/status
\f1\fs28  route stub? I can draft those against these files so you can drop them in with minimal edits.\
\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 Fantastic\'97thanks for sharing 
\f1\b MeshResearchNotes.txt
\f0\b0 . I read it closely and folded its Ludics\uc0\u8209 centric insights, protocol nuances, and interop goals into a concrete, implementation\u8209 ready roadmap that plugs directly into your current codebase (routes, libs, Prisma). I\'92ve annotated key items with inline citations back to the compendium and to the relevant code surfaces you already have.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Digital Agora \'97 Roadmap v3 (incorporating 
\f5\i \strokec2 MeshResearchNotes
\f1\i0 \strokec2 )\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Phase 0 \'97 Commit to public semantics, name the invariants (short spike)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  The notes emphasize the design choice between 
\f3\i \strokec2 public
\f0\i0 \strokec2  and 
\f3\i \strokec2 private
\f0\i0 \strokec2  semantics; Agora should be explicitly public so moderation and auditability remain tractable. \uc0\u12304 Public vs private semantics, implication for Mesh. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls15\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a 
\f1\b Room Policy
\f0\b0  flag 
\f2\fs26 dialogueSemantics = 'public'
\f0\fs24  (default) and document it in the room\'92s settings/help.\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Server: log this in 
\f2\fs26 /api/dialogue/*
\f0\fs24  responses (
\f2\fs26 meta.semantics: 'public'
\f0\fs24 ).\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI: small banner in the Dialogical panel that reads \'93Public semantics: legality computed from the public record.\'94\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Policy shows in the room config; responses include 
\f2\fs26 meta.semantics
\f0\fs24 .\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Moderator guide references public semantics explicitly. \uc0\u12304 Design implication spelled out. \u12305 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 1 \'97 Protocol core: reply structure, acts, daimon close, soft legality\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  The compendium pushes us to represent 
\f3\i \strokec2 interventions as sequences of acts
\f0\i0 \strokec2  at 
\f1\b loci
\f0\b0 , and to make 
\f3\i \strokec2 reply\uc0\u8209 to + attack/surrender
\f0\i0 \strokec2  first\uc0\u8209 class. It also specifies terminal 
\f1\b CLOSE/CONCEDE \uc0\u8658  convergence (\'86 daimon)
\f0\b0 . \uc0\u12304 Ludics acts/loci/trace & convergence with \'86; acceptance examples. \u12305 \

\f1\b What we already have to leverage
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls17\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 POST /api/dialogue/move
\f0\fs24  accepts/derives 
\f2\fs26 payload.acts
\f0\fs24 , maps 
\f2\fs26 CLOSE
\f0\fs24  to a daimon act, and dedups by signature; it also recompiles and steps the Ludics designs. \uc0\u12304 Route behavior, synthesizeActs, CLOSE mapping, compileFromMoves/stepInteraction wired. \u12305 \
\ls17\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 GET /api/dialogue/legal-moves
\f0\fs24  suggests 
\f2\fs26 WHY/GROUNDS/CONCEDE/RETRACT
\f0\fs24 , and conditionally 
\f2\fs26 CLOSE
\f0\fs24  by probing daimon hints from a step trace. \uc0\u12304 Legal moves w/ daimon\u8209 enabled CLOSE. \u12305 \
\ls17\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lib/dialogue/moves.ts
\f0\fs24  provides the shared 
\f2\fs26 synthesizeActs/makeSignature
\f0\fs24  helpers we can extend. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls18\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reply targeting & loci
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls19\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Extend 
\f2\fs26 DialogueMove
\f0\fs24  persistence to always carry 
\f2\fs26 payload.acts[]
\f0\fs24  with 
\f4\b\fs26 locusPath
\f0\b0\fs24  + 
\f4\b\fs26 openings
\f0\b0\fs24  (already modeled in the notes) and a 
\f4\b\fs26 justifiedBy
\f0\b0\fs24  (reply\uc0\u8209 to locusPath). \u12304 Multi\u8209 act payload shape and locus ramifications. \u12305 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enforce: every non\uc0\u8209 initial move 
\f3\i replies
\f0\i0  to a specific locus (explicit reply structure). \uc0\u12304 Importance of explicit reply structure for legality/backtracking/parallel lines. \u12305 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls20\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Attack vs surrender typing
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls21\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In 
\f2\fs26 POST /api/dialogue/move
\f0\fs24 , classify moves as 
\f3\i attack
\f0\i0  (
\f2\fs26 WHY
\f0\fs24 , 
\f2\fs26 GROUNDS
\f0\fs24 ) vs 
\f3\i surrender
\f0\i0  (
\f2\fs26 CONCEDE
\f0\fs24 , 
\f2\fs26 RETRACT
\f0\fs24 ) to drive open/closed branch UI and legality. \uc0\u12304 Attack vs surrender as formal properties. \u12305 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls22\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Terminal close (\'86)
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Keep current 
\f2\fs26 CLOSE \uc0\u8658  daimon
\f0\fs24  behavior, and surface it clearly in the trace UI as 
\f3\i Convergent
\f0\i0 . \uc0\u12304 CLOSE/CONCEDE \u8658  Convergent trace (\'86) acceptance criteria. \u12305 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls24\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Soft legal moves
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls25\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Keep 
\f2\fs26 GET /api/dialogue/legal-moves
\f0\fs24  fast; annotate \'93likely relevant\'94 (soft) based on open branches/loci; wire strict checking later (Phase 4).\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls26\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f2\fs26 WHY
\f0\fs24  followed by a 
\f2\fs26 GROUNDS
\f0\fs24  compiles to paired -/+ acts on the same locus (e.g., 
\f2\fs26 0.1
\f0\fs24 ) and shows as such in the trace. \uc0\u12304 Concrete acceptance example. \u12305 \
\ls26\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f2\fs26 CLOSE
\f0\fs24  or 
\f2\fs26 CONCEDE
\f0\fs24  leads the stepper to report a convergent trace with \'86. \uc0\u12304 Trace status/daimon. \u12305 \
\ls26\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Legal\uc0\u8209 moves API includes 
\f2\fs26 CLOSE
\f0\fs24  only when the stepper hints that locus is closable. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 2 \'97 UI surfaces for Ludics: Trace Ribbon, Locus Heatmap, Additive choice\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  The notes call for rendering the abstruse Ludics machinery as intuitive UI: narrated trace, heatmaps of loci, and enforced 
\f1\b additive choices (\uc0\u8853 )
\f0\b0 . \uc0\u12304 Trace ribbon, locus heatmap, additive picker. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls27\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NegotiationDrawer.tsx
\f0\b0 : add a 
\f1\b Trace Ribbon
\f0\b0  showing \'93P challenges at 0.1\'94 / \'93O defends at 0.1\'94, highlighting decisive indices. \uc0\u12304 UI/acceptance and decisive indices. \u12305 \
\ls27\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LociTreeWithControls.tsx
\f0\b0 : render 
\f1\b heatmap
\f0\b0  intensity by act frequency; highlight hot spots. \
\ls27\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Additive Choice Picker
\f0\b0 : when a positive act opens multiple 
\f2\fs26 openings
\f0\fs24  with 
\f2\fs26 isAdditive=true
\f0\fs24 , prompt the opponent to pick a branch; persist the chosen branch (
\f2\fs26 usedAdditive
\f0\fs24 ). \
\ls27\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Delocation/Faxing
\f0\b0 : expose a moderator action to 
\f3\i delocate
\f0\i0  a congested branch to a fresh base locus\'97tie to an API (see Phase 3). \uc0\u12304 Delocation design + acceptance. \u12305 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls28\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The Trace Ribbon narrates moves as in the examples; the Additive picker blocks progress until a branch is chosen; a mod can delocate a branch. \uc0\u12304 All three acceptance bullets. \u12305 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 3 \'97 Operational tools: Delocation route + Receipts\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  The compendium proposes 
\f1\b delocation
\f0\b0  as a formal remedy for \'93directory clashes\'94 and suggests recording these as procedural receipts. \uc0\u12304 Delocation (faxing) and affected surfaces. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls29\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f2\fs26 /api/ludics/delocate
\f0\fs24  that clones a design and shifts a branch to a fresh base address. \uc0\u12304 Proposed route. \u12305 \u8232 
\f3\i Note:
\f0\i0  you already have a panel delocation action wired as 
\f2\fs26 /api/dialogue/panel/delocate
\f0\fs24 ; we can either alias or migrate to the Ludics namespace so both the panel and NegotiationDrawer call the same service. \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a 
\f1\b DecisionReceipt
\f0\b0  entry when delocation occurs (subject=
\f2\fs26 locus
\f0\fs24 ), so the audit trail is append\uc0\u8209 only. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls30\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Calling the delocate API produces a new base (e.g., 
\f2\fs26 0.tag
\f0\fs24 ), emits SSE to refresh, and writes a procedural receipt. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 4 \'97 Relevance & termination semantics (gradual)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  Strict relevance (legality only if the move can flip the dialogical status) is powerful but expensive; adopt a 
\f1\b soft\uc0\u8209 now / strict\u8209 later
\f0\b0  posture. \uc0\u12304 Strict relevance is costly; use as a later layer. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls31\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Soft relevance (real\uc0\u8209 time):
\f0\b0  label moves \'93likely relevant\'94 if they target an 
\f3\i open
\f0\i0  locus that still influences the root status; show a subtle warning when not.\
\ls31\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Strict relevance (batch):
\f0\b0  offline job recomputes dialogical status and annotates moves/branches; room policy can enforce strict mode for high\uc0\u8209 stakes rooms.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls32\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Soft chip appears immediately; strict annotations land asynchronously and can be toggled in filters. \uc0\u12304 Relevance discussion and cost. \u12305 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 5 \'97 Evidence \uc0\u8594  Rule heuristics (CBR\u8209 inspired)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  When users attach evidence, they are often 
\f1\b implicitly proposing a defeasible rule
\f0\b0  (e.g., \'93when \{A, B\}, usually C\'94). Surface this as a guided suggestion. \uc0\u12304 CBR heuristics; evidence implies rules; suggest generalization. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls33\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In CitePicker / composer, after adding a citation, prompt: \'93Extract a general rule?\'94 with a structured form to mint a reusable pattern; store alongside the argument as a 
\f3\i warrant/background rule
\f0\i0 .\
\ls33\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Allow 
\f1\b distinguish
\f0\b0 /\'93doesn\'92t apply because\'85\'94 counters that target the rule\'92s factors, not just the conclusion. \uc0\u12304 Dialectical multi\u8209 argument structure of precedents; fine\u8209 grained cite\u8209 portions. \u12305 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls34\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Posting a citation can create a rule; later counters can 
\f3\i distinguish
\f0\i0  by contesting the rule\'92s factors.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 6 \'97 Interop: AIF export (and later import)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  Avoid a walled garden; AIF is the standard for moving structured debates between tools. \uc0\u12304 AIF rationale + endpoint sketch and acceptance. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls35\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement 
\f2\fs26 GET /api/deliberations/[id]/aif
\f0\fs24  with an 
\f2\fs26 I\uc0\u8209 Node/S\u8209 Node
\f0\fs24  mapping from your 
\f2\fs26 Claim/Argument
\f0\fs24 +scheme metadata. Create 
\f2\fs26 lib/export/aif.ts
\f0\fs24 .\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls36\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Exported AIF JSON validates and opens in OVA+/Carneades. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 7 \'97 Representative Viewpoints 2.0 (expose what we already compute)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  You already have foundational models and selection routines for 
\f1\b viewpoints
\f0\b0 ; surface them in the Agora context to show 
\f3\i \strokec2 plural extensions
\f0\i0 \strokec2  and audience coverage. \uc0\u12304 Models & selection pipeline \'96 components and route sketch. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls37\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f2\fs26 /api/deliberations/[id]/viewpoints/select
\f0\fs24  that calls the selection routine; render in 
\f2\fs26 components/deepdive/RepresentativeViewpoints.tsx
\f0\fs24  with coverage metrics and conflict pairs.\
\ls37\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reuse your AF/VAF/BAF helpers for edges (support vs rebut/undercut) so views can be filtered by edge semantics.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls38\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Users can toggle between 1..k representative views; coverage/min coverage reported; top conflict pairs highlighted.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Phase 8 \'97 Metrics & outcomes (make progress legible)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Why:
\f0\b0  The notes propose a solid set of metrics to validate the 
\f3\i \strokec2 multi\uc0\u8209 layered
\f0\i0 \strokec2  approach (dialogical vs monological). \uc0\u12304 Proposed metrics list. \u12305 \

\f1\b Work
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls39\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a 
\f1\b Deliberation Metrics
\f0\b0  panel: Argument Quality (defended rate), Deliberation Depth, User Engagement (challenges/undercuts), Resolution Rate (convergent branches), Persuasive Efficacy (opt\uc0\u8209 in survey). \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 Acceptance
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls40\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Metrics visible per deliberation; resolution rate aligns with trace convergence; depth >1 on non\uc0\u8209 trivial topics.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 File\uc0\u8209 level changes & where they land\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls41\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 API
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls41\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /api/dialogue/move
\f0\fs24 : keep signature/dedup & 
\f2\fs26 CLOSE\uc0\u8658 \'86
\f0\fs24 ; require reply locus for non\uc0\u8209 initial; persist 
\f2\fs26 acts[]
\f0\fs24  fully. \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /api/dialogue/legal-moves
\f0\fs24 : continue soft legality; add \'93likely relevant\'94 hint; preserve 
\f2\fs26 CLOSE
\f0\fs24  via stepper hints. \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /api/ludics/delocate
\f0\fs24 : new route (alias/migrate from panel delocate for consistency).\
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /api/deliberations/[id]/aif
\f0\fs24 : new export route. \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /api/deliberations/[id]/viewpoints/select
\f0\fs24 : selection endpoint. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls41\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lib
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls41\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 packages/ludics-engine/compileFromMoves
\f0\fs24  & 
\f2\fs26 stepper
\f0\fs24 : keep as the source of truth for compile/step; expose decisive indices/daimon\uc0\u8209 hints in the trace payload. \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lib/dialogue/moves.ts
\f0\fs24 : extend 
\f2\fs26 synthesizeActs
\f0\fs24  to include 
\f2\fs26 openings
\f0\fs24 , 
\f2\fs26 isAdditive
\f0\fs24 , 
\f2\fs26 justifiedBy
\f0\fs24 . \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lib/export/aif.ts
\f0\fs24 : new serializer. \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lib/deepdive/*
\f0\fs24 : reuse AF/selection helpers for Representative Viewpoints. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls41\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DB (Prisma)
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls41\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ensure 
\f2\fs26 DialogueMove.payload
\f0\fs24  is canonical 
\f1\b acts[]
\f0\b0  (notes show target shape). \
\ls41\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add receipts for delocation (if not already present as DecisionReceipt). \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls41\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls41\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 components/map/NegotiationDrawer.tsx
\f0\fs24 : Trace Ribbon + decisive index markers; \'93Resolve (\'86)\'94 indicator on convergent branches. \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 components/ludics/LociTreeWithControls.tsx
\f0\fs24 : heatmap + additive choice UI. \
\ls41\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 components/deepdive/RepresentativeViewpoints.tsx
\f0\fs24 : surface k\uc0\u8209 views with coverage stats. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Risks & mitigations\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls42\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Performance (relevance, step\uc0\u8209 traces):
\f0\b0  keep strict relevance offline; paginate long traces; cache daimon hints per locus. \uc0\u12304 Strict relevance cost note. \u12305 \
\ls42\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UX complexity:
\f0\b0  start with 
\f1\b soft chips
\f0\b0  (relevance / convergence) and progressive disclosure; use the Trace Ribbon as the primary explainer. \
\ls42\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Interop drift:
\f0\b0  validate AIF export against OVA+/Carneades samples as part of CI. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 What\'92s different vs. the prior roadmap\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls43\ilvl0
\f0\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Moves are 
\f1\b multi\uc0\u8209 act at explicit loci
\f0\b0  (not monolithic), enabling 
\f1\b additive choices
\f0\b0  and 
\f1\b presupposition/ramification
\f0\b0  handling. \uc0\u12304 Multi\u8209 act interventions & ramifications. \u12305 \
\ls43\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 We surface a 
\f1\b Convergence/Daimon
\f0\b0  vocabulary in UI/metrics so people can tell 
\f3\i why
\f0\i0  a thread is \'93done.\'94 \uc0\u12304 Convergence with \'86 in acceptance. \u12305 \
\ls43\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 We add 
\f1\b CBR\uc0\u8209 style evidence \u8594  rule prompts
\f0\b0  to make 
\f3\i implicit warrants
\f0\i0  explicit. \uc0\u12304 Evidence \u8658  rule heuristic. \u12305 \
\ls43\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 We prioritize 
\f1\b AIF export
\f0\b0  and 
\f1\b Representative Viewpoints
\f0\b0  to connect Agora to the broader ecosystem and to show plural, defensible summaries. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Suggested PR sequence (low\uc0\u8209 risk chunks)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls44\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Acts + Reply invariants
\f0\b0  (API/DB; small UI affordance).\
\ls44\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Trace Ribbon (read\uc0\u8209 only)
\f0\b0  + 
\f1\b CLOSE (\'86)
\f0\b0  polish. \
\ls44\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Additive picker
\f0\b0  and 
\f1\b soft relevance chips
\f0\b0 .\
\ls44\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Delocation route + receipt
\f0\b0 ; wire to NegotiationDrawer and Panel.\
\ls44\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Evidence \uc0\u8594  rule prompt
\f0\b0  in composer. \
\ls44\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AIF export
\f0\b0  (JSON) + 
\f1\b Representative Viewpoints
\f0\b0  surface. \
\ls44\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Metrics panel
\f0\b0  (depth, convergence rate, defended rate). \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 This plan stays true to 
\f3\i \strokec2 MeshResearchNotes
\f0\i0 \strokec2  while aligning with the code you\'92ve already shipped (
\f2\fs26 /api/dialogue/move
\f0\fs24 , 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24 , Ludics compile/step, panel tools). If you want, I can start with (1) and (2)\'97the minimal changes that unlock the rest\'97using the exact files/paths cited above.\
\
Absolutely\'97here\'92s a full second\uc0\u8209 pass \'93comb through\'94 of 
\f1\b MeshResearchNotes.txt
\f0\b0 , pulling in 
\f1\b everything
\f0\b0  it covers (not just Ludics) and tying each theme to a crisp takeaway we can carry into the Agora roadmap.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 1) Formal dialogue systems (beyond Ludics)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Prakken\uc0\u8209 style persuasion protocols (PPD).
\f0\b0 \uc0\u8232 The notes stress the explicit 
\f3\i \strokec2 reply
\f0\i0 \strokec2  structure (every move replies to a specific prior move), the distinction between 
\f1\b attacks
\f0\b0  (WHY/ARGUE) that keep a branch open and 
\f1\b surrenders
\f0\b0  (CONCEDE/RETRACT) that close it, and the role of 
\f1\b relevance
\f0\b0  (a move is legal only if it can change the root\'92s dialogical status). Termination and liberal back\uc0\u8209 replying/parallel lines are part of the model, not UI polish. This is the bedrock for IN/OUT computation and backtracking in Agora.\

\f1\b Event Calculus (EC) implementations.
\f0\b0 \uc0\u8232 The notes highlight EC as a declarative way to encode turn\u8209 taking, legality, and status\'97legality persists by inertia until terminated (e.g., by surrender or by making the move). That matters for a fast, cacheable \'93dialogue consultant\'94 on the server (who has the turn, which replies are legal now, was move X legal then?).\

\f1\b Public vs. private semantics (design choice).
\f0\b0 \uc0\u8232 The document calls out that we should commit to 
\f1\b public semantics
\f0\b0  (legality and status from the public record), in contrast to systems where legality depends on an agent\'92s private beliefs (PWA). This is essential for auditability, moderation, and shared ground truth.\

\f1\b Legal reasoning patterns (beyond \'93logic\'94).
\f0\b0 \uc0\u8232 A deeper nuance: 
\f1\b case\uc0\u8209 based reasoning
\f0\b0  (analogize/distinguish) is treated as 
\f3\i \strokec2 heuristics that introduce defeasible rules
\f0\i0 \strokec2  into the dialogue\'97not just \'93more content.\'94 When a user cites a precedent, they\'92re often proposing a general rule. The notes recommend prompting users to surface that rule explicitly (\'93In contexts with \{A,B\}, usually C\'94), making the implicit defeasible commitment visible and debatable.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 2) Structured & abstract argumentation (AFs) and a database\uc0\u8209 native path\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 AFs as databases (repairs = extensions).
\f0\b0 \uc0\u8232 The notes include a strong, implementable angle: represent attack graphs relationally and compute 
\f1\b preferred/stage/semi\uc0\u8209 stable
\f0\b0  extensions via 
\f1\b consistent query answering
\f0\b0  (repairs satisfying FDs/IDs), not just in memory. Benefits: scalability, integrity, and richer queries (e.g., \'93defended against X but not Y\'94), with a clean mapping between AF semantics and DB constraints.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 3) Discourse & rhetoric (RST, concessions, coherence)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 RST\uc0\u8209 driven structure suggestions in the Composer.
\f0\b0 \uc0\u8232 The notes detail how an RST parser can detect 
\f3\i \strokec2 nucleus/satellite
\f0\i0 \strokec2  relations (Evidence/Justify/Elaboration/Contrast/Condition) and auto\uc0\u8209 propose 
\f1\b Claim/Grounds
\f0\b0  scaffolding, map rhetorical relations to 
\f1\b support/rebut/undercut
\f0\b0 , and even combine (\'93glue\'94) adjacent segments into a single argumentative unit (ADU). This reduces cognitive load and raises structural quality.\

\f1\b \'93Yes, but\'85\'94 scaffolding (Concession \uc0\u8594  rebuttal).
\f0\b0 \uc0\u8232 Automatic detection of 
\f1\b Concession
\f0\b0  turns on a two\uc0\u8209 move template: first a 
\f3\i \strokec2 concede
\f0\i0 \strokec2  to the opponent\'92s point, then a targeted 
\f1\b rebut
\f0\b0 \'97explicitly wiring the dialogical move sequence the protocol expects.\

\f1\b Coherence scoring.
\f0\b0 \uc0\u8232 An RST\u8209 based \'93coherence score\'94 can flag fragmented drafts and suggest connective cues (\'93because/however\'94)\'97useful, low\u8209 friction feedback while composing.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 4) Interoperability & knowledge ecosystem\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 AIF import/export.
\f0\b0 \uc0\u8232 Adopt 
\f1\b AIF
\f0\b0  to avoid a walled garden: map our Claims/Arguments/Edges to AIF I\uc0\u8209 nodes/S\u8209 nodes, expose an export route, and ensure round\u8209 trip with OVA+/Carneades. This gives Agora scholarly and toolchain interop.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 5) Synthesis & representation of viewpoints\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Representative Viewpoints (RV) and entailment UI.
\f0\b0 \uc0\u8232 The notes include a concrete plan for 
\f1\b viewpoint selection
\f0\b0  (route + algorithms + UI) and a 
\f1\b SequentBadge
\f0\b0  for entailment (\uc0\u915  \u8866  \u916 ), so the system can present small, representative sets of arguments and show what they jointly support. This couples argumentation semantics with an audience\u8209 friendly presentation layer.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 6) Metrics & evaluation (to prove it works)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 What to measure beyond monological outputs.
\f0\b0 \uc0\u8232 Track 
\f3\i \strokec2 Argument Quality
\f0\i0 \strokec2  (defended vs defeated), 
\f3\i \strokec2 Deliberation Depth
\f0\i0 \strokec2  (length of attack/defense chains), 
\f3\i \strokec2 User Engagement
\f0\i0 \strokec2  (WHY/rebut/undercut rates), 
\f3\i \strokec2 Consensus/Resolution Rate
\f0\i0 \strokec2  (stable statuses), and 
\f3\i \strokec2 Persuasive Efficacy
\f0\i0 \strokec2  (belief change). These metrics are specific to dialogical/rhetorical systems and are explicitly proposed in the notes as our yardstick.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 7) Advanced Ludics hooks the notes mention (to round the picture)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Daimon closure (\'86) and \'93delocation.\'94
\f0\b0 \uc0\u8232 Beyond the basic compile/step, the notes identify (a) making 
\f1\b CLOSE (\'86)
\f0\b0  an explicit move when the locus is closable and (b) a 
\f1\b delocation
\f0\b0  operation to resolve additive collisions by shifting a design to a fresh branch. These are operational levers for real dialogues (and show how the Ludics layer complements PPD/AF/RST rather than replacing them).\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 8) Research\uc0\u8209 ops: how we keep our work grounded\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 NotebookLM setup and guardrails.
\f0\b0 \uc0\u8232 There\'92s a concrete plan to use NotebookLM with our schema/routes/components so analyses always cite the 
\f3\i \strokec2 real
\f0\i0 \strokec2  files, plus a prompt library and guardrails (\'93map ideas to Claims/Edges/CQStatus/DialogueMove, Ludics compile/step/trace, RV selection, AF labels; use CQ guard; name components to touch\'94). This is about reproducible, source\uc0\u8209 grounded research engineering.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 9) What this adds to the roadmap (delta from the first pass)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls45\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Public semantics as a formal principle
\f0\b0  (documented and enforced): legality/status computed from the public record + commitments; no hidden belief bases. \
\ls45\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dialogue consultant endpoints
\f0\b0  (turn holders, legal moves by locus, status \'93then/now\'94) backed by EC\uc0\u8209 style persistence rules. \
\ls45\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 RST pipeline
\f0\b0  in the Composer: structure suggestions, \'93Yes, but\'85\'94 template, glue operation, coherence scoring. \
\ls45\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CBR prompts on citation
\f0\b0 : when a source is attached, offer to surface a proposed defeasible rule. \
\ls45\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Database\uc0\u8209 native AF module
\f0\b0  (optional path) for large rooms: compute extensions as DB repairs; enable richer queries. \
\ls45\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AIF export
\f0\b0  route + serializer; 
\f1\b RV selection
\f0\b0  route + UI with SequentBadge. \
\ls45\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Metrics suite
\f0\b0  (quality, depth, resolution, engagement, persuasion) in dashboards. \
\ls45\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ludics quality\uc0\u8209 of\u8209 life
\f0\b0 : expose CLOSE (\'86) when legal; enable delocation ops for additive collisions. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 TL;DR\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 The notes cover a 
\f3\i \strokec2 complete stack
\f0\i0 \strokec2  for deliberation:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls46\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Procedural
\f0\b0  (PPD+EC), 
\f1\b structural
\f0\b0  (AFs, DB\uc0\u8209 native), 
\f1\b rhetorical
\f0\b0  (RST, concession/glue/coherence), 
\f1\b interoperability
\f0\b0  (AIF), 
\f1\b synthesis
\f0\b0  (RV/\uc0\u915 \u8866 \u916 ), 
\f1\b evaluation
\f0\b0  (dialogical metrics), and 
\f1\b advanced interaction
\f0\b0  (\'86/delocation)\'97with research\uc0\u8209 ops to keep us honest. If we reflect 
\f3\i all
\f0\i0  of these in the roadmap, we get a platform that\'92s not just argument\uc0\u8209 mapped, but 
\f3\i dialogue\uc0\u8209 sound, rhetorically aware, scalable, exportable, and measurable
\f0\i0 . \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 If you want, I can fold these deltas directly into the step\uc0\u8209 by\u8209 step implementation plan you approved earlier so we have one unified, engineering\u8209 ready roadmap.\
\
Perfect\'97here\'92s a 
\f1\b short \uc0\u8594  long\u8209 term roadmap
\f0\b0  that folds in 
\f3\i \strokec2 all
\f0\i0 \strokec2  the context you shared (research compendia + current Mesh codepaths). I\'92ve aligned it to what you already have in 
\f2\fs26 app/api/dialogue/*
\f0\fs24 , Prisma models, and the deep\uc0\u8209 dive libs, and I\'92ve organized it into PR\u8209 sized steps with crisp acceptance criteria.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Guiding principles (grounded in your current code & prior v2 plan)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls47\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Public semantics, explicit reply, idempotent moves.
\f0\b0  Keep the debate state computable from the public record, enforce explicit replies, and make every move idempotent via signatures. Your current 
\f2\fs26 /api/dialogue/move
\f0\fs24  already synthesizes acts, dedups on a unique 
\f2\fs26 signature
\f0\fs24 , and compiles/steps Ludics on write\'97great foundation to harden. \
\ls47\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Protocol first, then semantics, then geometry.
\f0\b0  Phase 1: hard rules for 
\f3\i legal moves
\f0\i0 . Phase 2: dialectical semantics (AF). Phase 3: Ludics geometry surfaced in UI. This sequencing matches the \'93Unified Discourse Core \uc0\u8594  Semantics \u8594  Ludics\'94 strategy in your v2 roadmap. \
\ls47\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Re\uc0\u8209 use what\'92s in repo.
\f0\b0  You already ship 
\f2\fs26 legal-moves
\f0\fs24 , 
\f2\fs26 open-cqs
\f0\fs24 , Ludics 
\f2\fs26 compile/step
\f0\fs24 , AF semantics helpers, and a representative\uc0\u8209 viewpoints selector\'97this roadmap wires and hardens them rather than reinventing.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Phase 0 (Week 0\'961): Hardening & alignment\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 0.1 Unify signatures & act synthesis (eliminate drift).
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls48\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Replace route\uc0\u8209 local 
\f2\fs26 makeSignature/synthesizeActs
\f0\fs24  with the single source of truth in 
\f2\fs26 lib/dialogue/moves.ts
\f0\fs24  (and/or 
\f2\fs26 lib/dialogue/signature.ts
\f0\fs24  if you standardize on sha256). Guard to keep 
\f2\fs26 dm_unique_signature
\f0\fs24  stable. Acceptance: round\uc0\u8209 trip creates identical signatures for the same payload; duplicate POST returns 
\f2\fs26 \{dedup:true\}
\f0\fs24 .\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 0.2 Normalize WHY TTL & CLOSE gating.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls49\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Move 
\f2\fs26 WHY_TTL_HOURS
\f0\fs24  into a server config; annotate WHY payloads with 
\f2\fs26 deadlineAt
\f0\fs24  consistently (already done), and keep 
\f2\fs26 CLOSE (\'86)
\f0\fs24  eligibility via stepper daimon hints (already implemented in 
\f2\fs26 legal-moves
\f0\fs24 ). Add tests. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 0.3 Align edge types across layers.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls50\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ensure 
\f2\fs26 ArgumentEdge.type
\f0\fs24  (rebut/undercut/support) is canonical, and keep 
\f2\fs26 ClaimEdge
\f0\fs24  derivation in sync via 
\f2\fs26 maybeUpsertClaimEdgeFromArgumentEdge
\f0\fs24 . Acceptance: creating a rebut/undercut edge auto\uc0\u8209 materializes the corresponding 
\f2\fs26 ClaimEdge
\f0\fs24  with correct 
\f2\fs26 attackType/targetScope
\f0\fs24 .\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 0.4 Bus/SSE topic hygiene.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls51\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Standardize on 
\f2\fs26 dialogue:changed
\f0\fs24 , 
\f2\fs26 dialogue:moves:refresh
\f0\fs24 , 
\f2\fs26 decision:changed
\f0\fs24  as emitted today; document payload contracts. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Phase 1 (Weeks 1\'963): Protocol & invariants\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 1.1 Legal\uc0\u8209 moves engine v1 (explicit reply surface).
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls52\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /api/dialogue/legal-moves
\f0\fs24  currently proposes WHY/answer/CONCEDE/RETRACT and CLOSE (if closable). Extend it to accept a concrete 
\f2\fs26 locusPath
\f0\fs24  and encode minimal invariants: no duplicate same\uc0\u8209 CQ WHY, GROUNDS only for open CQs, and block attacks on surrendered nodes. Add unit tests. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls52\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI: render 
\f1\b LegalMoveChips
\f0\b0  in your composer (e.g., 
\f2\fs26 DeliberationComposer.tsx
\f0\fs24 ) using this endpoint. Acceptance: chips reflect open\uc0\u8209 CQ state from 
\f2\fs26 open-cqs
\f0\fs24  and expose CLOSE when 
\f2\fs26 daimonHints
\f0\fs24  allow. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 1.2 Attack granularity in the UI (rebut vs undercut).
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls53\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 lib/dialogue/legalAttacks.ts
\f0\fs24  / 
\f2\fs26 legalMoves.ts
\f0\fs24  to propose move\uc0\u8209 specific scaffolds (e.g., \'93challenge antecedent\'94, \'93ask witness\'94), tagging the move payload so the server can record intended attack scope (premise/inference/conclusion). Acceptance: posting a counter from these options writes an 
\f2\fs26 ArgumentEdge
\f0\fs24  with the proper 
\f2\fs26 type
\f0\fs24 /
\f2\fs26 targetScope
\f0\fs24  and triggers 
\f2\fs26 ClaimEdge
\f0\fs24  upsert.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 1.3 Commitments (thin slice).
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls54\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Start with the route you already have\'97
\f2\fs26 /api/dialogue/answer-and-commit
\f0\fs24 \'97to record a 
\f1\b GROUNDS + commitment
\f0\b0  in one transaction. Expose a read\uc0\u8209 only 
\f1\b Commitments
\f0\b0  pane per participant (derived from moves/receipts) and a minimal \'93retract commitment\'94 act that toggles state. Acceptance: answering a WHY via this route both closes the CQ and creates a visible commitment record for the chosen owner (P/O). \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Phase 2 (Weeks 3\'966): CQ wiring & dialectical status\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 2.1 CQs as first\uc0\u8209 class moves.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls55\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Replace \'93toggle satisfied\'94 UX with 
\f1\b ASK/ANSWER
\f0\b0  wiring you already model: clicking a CQ spawns a 
\f2\fs26 WHY
\f0\fs24  (with 
\f2\fs26 schemeKey/cqId
\f0\fs24  in payload). Answering is a 
\f2\fs26 GROUNDS
\f0\fs24  move to the same locus (the server already dedups by signature). Acceptance: 
\f2\fs26 open-cqs
\f0\fs24  shows no key after a valid GROUNDS; the 
\f1\b Dialogical/RightRail
\f0\b0  reflects that the virtual attacker is OUT. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 2.2 Dialectical labels (AF preferred/grounded).
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls56\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement 
\f2\fs26 /api/deliberations/[id]/dialectic
\f0\fs24  using 
\f2\fs26 lib/deepdive/af.ts
\f0\fs24 : build attack map from 
\f2\fs26 ArgumentEdge
\f0\fs24  (rebut/undercut), compute preferred/grounded, and return 
\f2\fs26 IN/OUT/UNDEC
\f0\fs24  per node. UI: badges on cards and filters in RightRail. Acceptance: cycles marked UNDEC (preferred), unattacked nodes IN, attacked\uc0\u8209 by\u8209 IN nodes OUT. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 2.3 Protocol presets (room pref).
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls57\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a 
\f2\fs26 deliberation.prefs
\f0\fs24  flag for 
\f1\b asymmetric proof
\f0\b0  and 
\f1\b strict relevance
\f0\b0  (feature flag off by default). For now, only show 
\f1\b soft relevance
\f0\b0  warnings client\uc0\u8209 side based on unresolved loci; strict relevance can be an offline auditor later (Phase 4). Acceptance: toggling 
\f1\b asymmetricProof
\f0\b0  changes labels for edge cases in AF (documented examples). \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Phase 3 (Weeks 6\'9610): Ludics geometry \uc0\u8594  usable tools\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 3.1 Compile & step already\uc0\u8209 there Ludics.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls58\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /api/dialogue/move
\f0\fs24  is already compiling designs and stepping interaction (\'86 close hints). Add a 
\f1\b Trace Ribbon
\f0\b0  and 
\f1\b Locus Heatmap
\f0\b0  to 
\f2\fs26 NegotiationDrawer
\f0\fs24  to visualize traces and hotspots; annotate indices where convergence/divergence is determined. Acceptance: after a sequence WHY\uc0\u8594 GROUNDS, the ribbon shows paired acts at the shared locus (e.g., 
\f2\fs26 0.1
\f0\fs24 ) and the CLOSE chip appears when daimon conditions are met. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 3.2 Delocation (faxing) as moderator tool.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls59\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wire 
\f2\fs26 /api/dialogue/panel/delocate
\f0\fs24  (already implemented) into a small moderator UI control to \'93move\'94 a congested branch to a fresh base locus; log via 
\f2\fs26 ludicDecisionReceipt
\f0\fs24 . Acceptance: clicking 
\f3\i Delocate
\f0\i0  clones & shifts design, produces a procedural receipt, and emits refresh events. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 3.3 Panel receipts (auditable actions).
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls60\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use 
\f2\fs26 /api/dialogue/panel/confirm
\f0\fs24  to mint 
\f3\i epistemic/procedural/policy
\f0\i0  receipts for \'93we consider branch X resolved\'94 operations; show on the deliberation timeline. Acceptance: receipts render with subject, rationale, and link back to nodes. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Phase 4 (Weeks 10\'9614): Value lenses, support edges, relevance auditor\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 4.1 Support edges & value lenses.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls61\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Extend UI to create 
\f1\b support
\f0\b0  edges distinctly from defenses; in AF, keep support out of conflict but surface as strength cues. Add a minimal 
\f1\b Audience/Value
\f0\b0  selector (start with a static ordering per room) to color chips per audience, matching the v2 roadmap concept. Acceptance: arguments display support counters and audience\uc0\u8209 specific \'93accepted\'94 chips. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 4.2 Offline relevance auditor.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls62\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Batch job: simulate potential moves to compute strict relevance (expensive) and annotate nodes with \'93strictly relevant/irrelevant\'94. Client continues to use soft gating; moderators see strict labels. Acceptance: nightly task writes annotations; UI shows a subtle badge; no sync path blocking. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Phase 5 (Weeks 14\'9620): Synthesis & decision support\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 5.1 Representative viewpoints.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls63\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Expose 
\f2\fs26 /api/deliberations/[id]/viewpoints/select
\f0\fs24  backed by 
\f2\fs26 lib/deepdive/selection.ts
\f0\fs24  (utilitarian/harmonic/maxcov), using approvals as utility signal. Render 2\'965 
\f1\b Viewpoint
\f0\b0  cards with coverage stats and an optional 
\f1\b DecisionReceipt
\f0\b0  when one is adopted. Acceptance: top\uc0\u8209 k viewpoints computed; coverageAvg/min surfaced; adopting a viewpoint creates a receipt.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 5.2 Briefs from deliberations.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls64\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use existing 
\f2\fs26 Brief/BriefVersion/BriefLink
\f0\fs24  models to compile a brief from a deliberation (current selection or AF IN\uc0\u8209 set). Acceptance: clicking 
\f1\b Compile Brief
\f0\b0  creates a version with links to arguments/claims; renders in Brief viewer. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Phase 6 (20+ weeks): Interop & research\uc0\u8209 grade features\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 6.1 AIF export/import.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls65\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f2\fs26 /api/deliberations/[id]/aif
\f0\fs24  to serialize I\uc0\u8209 nodes/S\u8209 nodes from your internal graph; basic import for OVA/Carneades. Acceptance: round\u8209 trip a small map. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 6.2 Case\uc0\u8209 based reasoning helpers.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls66\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 When a citation is attached, prompt to induce a defeasible rule (analogize/distinguish) and store as warrant metadata; surface \'93distinguish\'94 affordances on follow\uc0\u8209 up claims. (Research flag.) \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 Cross\uc0\u8209 cutting engineering tasks\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls67\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Migrations & indexes.
\f0\b0  Confirm uniqueness on 
\f2\fs26 (deliberationId, signature)
\f0\fs24  for 
\f2\fs26 DialogueMove
\f0\fs24  and ensure fast lookups for 
\f2\fs26 findMany
\f0\fs24  in 
\f2\fs26 /moves
\f0\fs24  with composite 
\f2\fs26 [createdAt,id]
\f0\fs24  order. \
\ls67\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test kit.
\f0\b0  Route unit tests for 
\f2\fs26 /move
\f0\fs24 , 
\f2\fs26 /legal-moves
\f0\fs24 , 
\f2\fs26 /moves
\f0\fs24 , 
\f2\fs26 /open-cqs
\f0\fs24 , AF engine golden cases (A\uc0\u8596 B cycle), and viewpoint selector.\
\ls67\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UX fit\uc0\u8209 and\u8209 finish.
\f0\b0  LegalMoveChips, CQ chips, AF status badges, receipts timeline, and Ludics trace/heatmap in 
\f2\fs26 NegotiationDrawer
\f0\fs24 . (You can crib labels from 
\f2\fs26 lib/dialogue/legalAttacks.ts
\f0\fs24 /
\f2\fs26 legalMoves.ts
\f0\fs24 .) \
\ls67\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Observability.
\f0\b0  Log structured audit events for every dialogue mutation + receipt issuance; show them in a developer \'93Events\'94 pane. (Your merge/receipt style in other areas is a good pattern.) \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 What \'93done\'94 looks like at each horizon\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls68\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Short term (\uc0\u8804  3 weeks):
\f0\b0  Stable legal\uc0\u8209 moves flow with explicit replies and CQ closure; dedup/idempotent moves; CLOSE (\'86) shows up when appropriate; commitments pane; AF labels visible.\
\ls68\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mid term (\uc0\u8776  6\'9610 weeks):
\f0\b0  Ludics trace + heatmap in UI; delocation and panel receipts; support edges & value lens; nightly relevance auditor annotates threads.\
\ls68\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Long term (\uc0\u8776  14\'9620+ weeks):
\f0\b0  Representative viewpoints & decision receipts integrated; brief compilation; AIF interop; optional CBR prompts for evidence\uc0\u8209 to\u8209 rule induction.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Why this is safe and efficient for your codebase\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 It stays inside the lanes you already paved\'97your 
\f1\b API routes
\f0\b0 , 
\f1\b Prisma models
\f0\b0 , and 
\f1\b deep\uc0\u8209 dive libs
\f0\b0 \'97and layers theory\uc0\u8209 driven features in a way that always leaves the platform in a working, incrementally better state. The plan also matches the architectural direction of your 
\f1\b Roadmap v2
\f0\b0  while being concrete about files, endpoints, and acceptance checks.\
If you want, I can start by opening the Phase 0/1 PR set (signatures alignment + legal\uc0\u8209 moves invariants + UI chips) since all the touchpoints are already in 
\f2\fs26 app/api/dialogue/*
\f0\fs24  and 
\f2\fs26 lib/dialogue/*
\f0\fs24 .\
\
Absolutely\'97here\'92s a tight, third\uc0\u8209 pass 
\f1\b audit
\f0\b0  across the research compendia 
\f3\i \strokec2 and
\f0\i0 \strokec2  your current Agora code to catch anything still missing or under\uc0\u8209 specified. I\'92ve organized it as (A) theory items we should surface explicitly, (B) what your code already covers (with gaps), and (C) concrete \'93delta\'94 tasks to eliminate the omissions. Citations point to the passages in your compendia and the relevant code files I inspected.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 A) Theory details that must be first\uc0\u8209 class (and how they alter the plan)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls69\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Game\uc0\u8209 theoretic links between AF semantics and dialogue play
\f0\b0 \uc0\u8232 The compendium spells out that 
\f3\i winning strategies
\f0\i0  for PRO under different semantics (grounded vs. preferred credulous/skeptical) correspond to different 
\f1\b legality / repetition
\f0\b0  constraints in the dialogue game. That\'92s more than a nice\uc0\u8209 to\u8209 have; it means Agora should let a room choose a semantics and then enforce the corresponding move constraints (e.g., who may repeat which arguments). Add a 
\f1\b Semantics
\f0\b0  preset that maps to grounded or preferred (credulous/skeptical) and adjusts legality accordingly.\
\ls69\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Case\uc0\u8209 Based Reasoning (CBR) as 
\f5\i premise\uc0\u8209 introduction
\f1\i0  moves
\f0\b0 \uc0\u8232 The \'93analogize / broaden / distinguish\'94 repertoire isn\'92t just annotations\'97it\'92s a 
\f1\b procedural layer
\f0\b0  for 
\f3\i growing
\f0\i0  the rule pool during the dispute. We should expose these as explicit composer templates (CBR palette) with structured payloads, and evaluate dialogical status relative to the dynamically introduced rules.\
\ls69\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Precedent as a 
\f5\i dialectical multi\uc0\u8209 argument
\f1\i0  structure
\f0\b0  (not a single fact)\uc0\u8232 Evidence should be linkable to another deliberation\'92s 
\f3\i winning
\f0\i0  and 
\f3\i defeated
\f0\i0  lines (with priority reasons), so a participant can cite 
\f1\b parts
\f0\b0  of a precedent or 
\f3\i distinguish
\f0\i0  it precisely. This argues for first\uc0\u8209 class cross\u8209 deliberation links + \'93import a sub\u8209 tree\'94 affordances in the editor.\
\ls69\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Schemes + CQs: make the prompts do real work
\f0\b0 \uc0\u8232 Schemes come with 
\f1\b critical questions
\f0\b0 ; we should attach those CQs to WHY/GROUNDS guidance and drive one\uc0\u8209 click 
\f3\i legal move
\f0\i0  scaffolds (e.g., \'93expert opinion \uc0\u8594  ask for domain, track record, consensus\'94). Your current open\u8209 CQ plumbing is a good start; pair it with scheme libraries. \
\ls69\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Public vs. private semantics (make it explicit)
\f0\b0 \uc0\u8232 Your architecture implicitly uses 
\f1\b public semantics
\f0\b0  (good), but we should declare and enforce it at the API boundary (legality depends only on public record, not private beliefs) and keep \'93private scratchpads\'94 as authoring aids only.\
\ls69\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dialectical asymmetry (\'93strict defeat\'94 for the proponent)
\f0\b0 \uc0\u8232 For legal/policy modes, the proponent must 
\f1\b strictly
\f0\b0  defeat the opponent; the opponent need only defeat. This should be a room preference that changes status aggregation and legality (e.g., what counts as a successful defense).\
\ls69\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Relevance = \'93can flip the root\'92s dialogical status\'94 (costly)
\f0\b0 \uc0\u8232 True relevance requires simulating the move\'92s impact on status; it is heavy and was 
\f3\i explicitly
\f0\i0  hard in the EC formalization. Keep 
\f1\b soft relevance
\f0\b0  (fast, UI warning) and batch a strict auditor that annotates threads post\uc0\u8209 hoc.\
\ls69\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Priority rules are themselves debatable
\f0\b0 \uc0\u8232 Defeat via rebut/undercut and 
\f1\b priority
\f0\b0  are objects of argument too. We should allow users to 
\f3\i argue
\f0\i0  a priority between rules/arguments and reflect that in status updates. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 B) Where the code stands (and what that implies)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 1) Dialogue Move pipeline
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls70\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Route
\f0\b0 : 
\f2\fs26 /api/dialogue/move
\f0\fs24  normalizes payloads, generates a 
\f1\b signature
\f0\b0  (idempotent insert), enforces WHY TTL, synthesizes Ludics acts (including 
\f1\b CLOSE/\'86
\f0\b0 ), compiles/steps designs, and emits SSE. Good foundation. 
\f3\i Gap:
\f0\i0  the signature logic here differs from 
\f2\fs26 lib/dialogue/signature.ts
\f0\fs24 ; unify to avoid drift and collisions. \
\ls70\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Acts
\f0\b0 : 
\f2\fs26 synthesizeActs
\f0\fs24  supports WHY/GROUNDS/CLOSE; extend to \'93Accept argument\'94 vs \'93Concede claim\'94 to enforce the R7\uc0\u8209 style guard (accept the 
\f3\i argument
\f0\i0  when it\'92s a reply to WHY). \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 2) Legality & CQs
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls71\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Route
\f0\b0 : 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  collects open CQs and exposes 
\f1\b GROUNDS
\f0\b0 /WHY/CONCEDE/RETRACT; if a 
\f2\fs26 locusPath
\f0\fs24  is provided, it calls the stepper and offers 
\f1\b CLOSE (\'86)
\f0\b0  when legal. Great. 
\f3\i Gaps:
\f0\i0  (a) add \'93duplicate\uc0\u8209 reply\'94 and \'93no attack after surrender\'94 checks; (b) surface 
\f1\b R7
\f0\b0  (\'93concede conclusion\'94 blocked when you owe \'93accept argument\'94). \
\ls71\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Route
\f0\b0 : 
\f2\fs26 /api/dialogue/open-cqs
\f0\fs24  already computes open keys per target; hook scheme metadata here so CQs carry scheme\uc0\u8209 specific prompts. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 3) AF / selection & clustering
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls72\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AF
\f0\b0 : 
\f2\fs26 lib/deepdive/af.ts
\f0\fs24  builds Dung AFs; 
\f2\fs26 preferredExtensions
\f0\fs24  enumerates/heuristically grows preferred sets; this is the right abstraction to back a 
\f1\b Semantics
\f0\b0  toggle in the UI and status engine. \
\ls72\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Selection
\f0\b0 : 
\f2\fs26 lib/deepdive/selection.ts
\f0\fs24  already computes 
\f1\b representative viewpoints
\f0\b0  with utilitarian/harmonic/maxcov rules\'97perfect to surface \'93representative bundles\'94 and to wire audience/value lenses later. \
\ls72\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Models
\f0\b0 : Prisma has 
\f1\b Claim/Argument/Edges
\f0\b0  (rebuts/supports, targetScope), 
\f1\b Clusters
\f0\b0 , 
\f1\b BridgeRequests
\f0\b0 , 
\f1\b Briefs/Versions
\f0\b0 , 
\f1\b Issues
\f0\b0 \'97we can align legal 
\f3\i support edges
\f0\i0  (BAF) and future 
\f3\i value lenses
\f0\i0  (VAF) on top of these. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 4) Attack suggestion helpers
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls73\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 legalAttacks.ts
\f0\fs24  / 
\f2\fs26 legalMoves.ts
\f0\fs24  detect basic shapes (conditional/conjunction/disjunction/\uc0\u8704 /\u8707 /
\f1\b presupposition
\f0\b0 ), returning move templates. Great seed for the 
\f1\b attack palette
\f0\b0  and presupposition\uc0\u8209 challenge chip. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 5) Panel actions & Ludics
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls74\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Confirm
\f0\b0  writes a decision receipt; 
\f1\b Delocate
\f0\b0  clones/retags designs and records a procedural receipt, then refreshes moves. These are the right \'93procedural rails\'94 to expose 
\f3\i Resolve
\f0\i0  events and \'86 closures in UI. \
\pard\pardeftab720\sa240\partightenfactor0

\f1\b \cf0 \strokec2 6) AIF export stub in notes
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls75\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Your notes earmark 
\f2\fs26 lib/export/aif.ts
\f0\fs24 \'97good; let\'92s implement minimal AIF now so evidence/arguments can be exported cleanly. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 C) \'93Delta\'94 checklist \'97 concrete items to eliminate omissions\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 Below are implementation\uc0\u8209 sized tasks with where they live and what to change.\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 Protocol invariants & guards\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls76\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Duplicate reply (R4) & \'93no attack after surrender\'94 (R5)
\f0\b0 : add to 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  (and server guard shared util), backed by a small index over 
\f2\fs26 (replyTo, kind)
\f0\fs24  in moves, plus a branch\uc0\u8209 state cache. \
\ls76\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R7\uc0\u8209 style guard (\'93Accept argument\'94 vs \'93Concede claim\'94)
\f0\b0 : extend 
\f2\fs26 synthesizeActs
\f0\fs24  and legal\uc0\u8209 moves so that when replying to 
\f2\fs26 WHY
\f0\fs24 , \'93Concede\'94 becomes \'93Accept this argument\'94 (and closes the branch); block raw concede in that locus. \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Semantics & status\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls77\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AF semantics toggle
\f0\b0  (grounded / preferred\uc0\u8209 credulous / preferred\u8209 skeptical):\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls77\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a room pref.\
\ls77\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In status computation, enforce repetition constraints and set evaluation accordingly; reuse 
\f2\fs26 preferredExtensions
\f0\fs24  for preferred, and add a grounded labelling pass.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls77\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dialectical asymmetry
\f0\b0 : boolean pref to switch strict defeat for PRO in status/legality aggregation. \
\ls77\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Relevance
\f0\b0 : keep 
\f1\b soft relevance
\f0\b0  (target is unresolved/open) inline; write a 
\f1\b batch auditor
\f0\b0  process that simulates potential moves on the AF to compute \'93strict relevance\'94 badges. \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 CBR & cross\uc0\u8209 debate evidence\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls78\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CBR palette
\f0\b0  (Analogize/Broaden/Distinguish templates) in the composer; persist as structured payloads; show rule deltas in the Right Rail. Evaluate status vs. the 
\f1\b grown
\f0\b0  rule pool. \
\ls78\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cross\uc0\u8209 deliberation evidence
\f0\b0 : allow citing 
\f3\i portions
\f0\i0  of another deliberation\'92s tree (winning/defeated/priority nodes) as sources with deep links, not just URLs. \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Schemes, CQs & presuppositions\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls79\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Attach CQs to schemes
\f0\b0  in 
\f2\fs26 open-cqs
\f0\fs24  (add scheme metadata) and populate composer prompts accordingly. \
\ls79\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Presupposition chip
\f0\b0 : if 
\f2\fs26 legalMoves.detectShape === 'presupposition'
\f0\fs24 , show a \'93Challenge presupposition\'94 quick action that spawns a targeted WHY. \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Interop & receipts\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls80\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AIF export
\f0\b0  minimal pass (I\uc0\u8209 nodes/S\u8209 nodes) for arguments and citations; wire to Briefs. \
\ls80\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Resolve / CLOSE (\'86)
\f0\b0  UX: promote your legal\uc0\u8209 moves \'93CLOSE\'94 suggestion into a visible 
\f1\b Resolve branch
\f0\b0  button; log a procedural receipt (you already do for panel ops). \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Consistency & signatures\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls81\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unify signatures
\f0\b0 : replace custom 
\f2\fs26 makeSignature
\f0\fs24  in the route with 
\f2\fs26 computeDialogueMoveSignature
\f0\fs24  from 
\f2\fs26 lib/dialogue/signature.ts
\f0\fs24  (or vice\uc0\u8209 versa) to guarantee idempotence across services.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 D) Tiny but important UX clarifications we should add\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls82\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open vs. closed branch pills
\f0\b0  + \'93Show full chain\'94 / \'93Collapse chain\'94 (you already do variants in Forum): mirror that in deliberation trees, tied to surrenders and CLOSE (\'86). \
\ls82\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Attack palette
\f0\b0  always contextualized by shape (IF/AND/OR/\uc0\u8704 /\u8707 ) and 
\f1\b CQs
\f0\b0 ; it should never suggest illegal attacks (e.g., on a surrendered target). \
\ls82\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Public semantics notice
\f0\b0  in-room: \'93Legality is computed from the public record; drafts don\'92t affect it.\'94 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 E) Why this closes the remaining theoretical gaps\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls83\ilvl0
\f0\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It binds 
\f1\b semantics
\f0\b0  (grounded/preferred) to 
\f1\b protocol behavior
\f0\b0 , aligning UI options with formal games. \
\ls83\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It turns 
\f1\b CBR
\f0\b0  from narrative advice into 
\f1\b concrete legal moves
\f0\b0  that dynamically alter what\'92s in play. \
\ls83\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It makes 
\f1\b priorities
\f0\b0  and 
\f1\b relevance
\f0\b0  explicit, auditable, and (for relevance) pragmatically computed.\
\ls83\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 It upgrades 
\f1\b evidence
\f0\b0  to structured, cross\uc0\u8209 debate citations that match the legal\u8209 style dialectical model. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Quick \'93first PRs\'94 I can cut immediately (each is bite\uc0\u8209 sized)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls84\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 R4/R5 legality guards + R7 accept\uc0\u8209 argument gate
\f0\b0  in 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  (+ shared util) and 
\f2\fs26 synthesizeActs
\f0\fs24 .\
\ls84\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Semantics toggle
\f0\b0  (grounded/preferred) wired through AF status using 
\f2\fs26 af.ts
\f0\fs24  + selection heuristics. \
\ls84\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CBR move templates
\f0\b0  in the composer (broaden/distinguish) with rule\uc0\u8209 pool deltas in the Right Rail. \
\ls84\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AIF export
\f0\b0  minimal I/S\uc0\u8209 nodes for arguments/citations. \
\ls84\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Signature unification
\f0\b0  to ensure idempotent inserts are consistent system\uc0\u8209 wide. \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 If you want me to start cutting code for (1) and (5) first, I\'92ll deliver those changes in the existing files you\'92ve shared (
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24 , 
\f2\fs26 /api/dialogue/move
\f0\fs24 , 
\f2\fs26 lib/dialogue/signature.ts
\f0\fs24 , 
\f2\fs26 lib/dialogue/moves.ts
\f0\fs24 ). The rest can follow in the order above.\
\
\
Here\'92s a 
\f1\b final audit pass
\f0\b0 \'97tight, implementation\uc0\u8209 ready, and cross\u8209 checked against your research compendia 
\f3\i \strokec2 and
\f0\i0 \strokec2  the current Agora code. I\'92ve grouped the findings into (A) theory guarantees we must uphold, (B) what the codebase already does, (C) gaps + exact fixes (files to touch), and (D) a short PR stack with crisp acceptance checks.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 A) Theory guarantees we must uphold (non\uc0\u8209 negotiables)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls85\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Explicit reply structure (tree), not just sequence.
\f0\b0  Every non\uc0\u8209 initial move must 
\f3\i reply to a specific prior move
\f0\i0 ; attacks keep a branch open, surrenders close it; legality and status (IN/OUT) depend on this tree. Back\uc0\u8209 replies and parallel attacks must be legal. \
\ls85\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Protocol rules R4/R5/R7, turn model, termination.
\f0\b0  No duplicate replies to the same target (R4); after surrender, further attacks on that target are illegal (R5); if an argument was offered in answer to 
\f3\i why \uc0\u966 
\f0\i0 , you can\'92t jump to 
\f3\i concede \uc0\u966 
\f0\i0 \'97you must 
\f1\b accept the argument
\f0\b0 , not just the conclusion (R7). After the first two moves, both players \'93have the turn\'94 (no simultaneous speech), and a dialogue terminates when a turn\uc0\u8209 holder has no legal moves. These drive the legality oracle and UI affordances. \
\ls85\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Public semantics by design.
\f0\b0  All legality and status are derived from the 
\f1\b public record
\f0\b0 , not private beliefs (PWA is a different, private\uc0\u8209 semantics family). This matches the Agora transparency ideal. \
\ls85\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Relevance (soft now, strict later).
\f0\b0  True relevance = \'93could this move flip the root\'92s status?\'94\'97powerful but expensive; run soft guards in realtime, strict validator offline. \
\ls85\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dialects & values.
\f0\b0  Asymmetric burdens of proof (legal/policy rooms) and audience/value lenses (VAF) are first\uc0\u8209 class roadmap items. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 B) What the codebase already does well (quick wins we can build on)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls86\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Move API with idempotency for key kinds.
\f0\b0  
\f2\fs26 /api/dialogue/move
\f0\fs24  writes moves with a per\uc0\u8209 kind signature (idempotent for WHY/GROUNDS/CLOSE/CONCEDE mapping), TTL for WHY, auto\u8209 compilation into Ludics designs, and optional stepping + SSE bus events. \
\ls86\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Legal\uc0\u8209 moves prototype.
\f0\b0  
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  proposes GROUNDS for open CQs, otherwise WHY, plus CONCEDE/RETRACT; it can gate CLOSE (\'86) when the stepper signals a closable locus. \
\ls86\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Shared helpers.
\f0\b0  
\f2\fs26 lib/dialogue/moves.ts
\f0\fs24  provides 
\f2\fs26 makeSignature
\f0\fs24 /
\f2\fs26 synthesizeActs
\f0\fs24 ; 
\f2\fs26 lib/dialogue/legalMoves.ts
\f0\fs24  detects shapes (conditional, disjunction, presupposition, \'85) to suggest attack options; 
\f2\fs26 lib/deepdive/af.ts
\f0\fs24  computes preferred extensions for Dung AFs. \
\ls86\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prisma scaffolding for deliberation & synthesis.
\f0\b0  Argument/Edge with 
\f2\fs26 targetScope
\f0\fs24  (premise/inference/conclusion), approvals, ViewpointSelection + ViewpointArgument, clusters/bridge\uc0\u8209 builder, and Decision receipts (the \'93panel confirm\'94 route is in place). Great substrate for Representative Viewpoints + auditable decisions. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 C) Gaps & precise fixes (file\uc0\u8209 level actions)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 The bullets below cite both the 
\f3\i research intent
\f0\i0  and 
\f3\i exact files
\f0\i0  requiring edits.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Persist the reply structure (locus + reply\uc0\u8209 to) on every move.
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  Our move rows have 
\f2\fs26 targetType/targetId
\f0\fs24  and an optional 
\f2\fs26 payload.locusPath
\f0\fs24 , but 
\f3\i no durable field
\f0\i0  for the explicit reply locus / replied move. We need 
\f2\fs26 justifiedByLocus
\f0\fs24  and/or 
\f2\fs26 replyToMoveId
\f0\fs24  to make R4/R5/R7 enforceable and to support back\uc0\u8209 replies and parallel lines cleanly.\
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  Prisma 
\f2\fs26 DialogueMove
\f0\fs24  (add 
\f2\fs26 justifiedByLocus String?
\f0\fs24 , 
\f2\fs26 replyToMoveId String?
\f0\fs24  + FK), write path in 
\f2\fs26 /api/dialogue/move
\f0\fs24 , and have composers set it.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enforce R4/R5/R7 and the turn model in the legality oracle.
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  Current 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  is CQ\uc0\u8209 oriented and permissive; it doesn\'92t block duplicates (R4), post\u8209 surrender attacks (R5), or force \'93Accept argument\'94 vs \'93Concede \u966 \'94 (R7), nor does it encode the \'93both have the turn after move 2 / no simultaneous speech\'94 model.\
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  Extend 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  to consult recent moves on the 
\f3\i target locus/reply chain
\f0\i0 , refuse illegal acts, and surface \'93Accept argument\'94 as a first\uc0\u8209 class option when an 
\f2\fs26 argue
\f0\fs24  answered a 
\f2\fs26 WHY
\f0\fs24 . Use 
\f2\fs26 lib/dialogue/legalMoves.ts
\f0\fs24  patterns to keep UX helpful, but make the server authoritative.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unify signatures & idempotency (eliminate drift).
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  We now have 
\f3\i two signature strategies
\f0\i0 : the bespoke 
\f2\fs26 makeSignature
\f0\fs24  in the route and the deterministic 
\f2\fs26 computeDialogueMoveSignature
\f0\fs24  utility; they don\'92t align, risking surprise dedup behavior across endpoints.\
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  Replace the ad\uc0\u8209 hoc per\u8209 route signature with 
\f2\fs26 computeDialogueMoveSignature
\f0\fs24  (or centralize in 
\f2\fs26 lib/dialogue/moves.ts
\f0\fs24 ) and ensure a unique index 
\f2\fs26 (deliberationId, signature)
\f0\fs24  exists. Keep special\uc0\u8209 case idempotency for WHY/GROUNDS/CLOSE by stabilizing payload fields used in the hash. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a Commitment store and derive it from moves.
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  Public commitments are essential (concede/retract should update CS). This enables consistency checks and \'93you can\'92t concede \'ac\uc0\u966  while committed to \u966 \'94 room policies.\
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  Prisma: 
\f2\fs26 Commitment \{ deliberationId, participantId, proposition, isRetracted \}
\f0\fs24 . Update 
\f2\fs26 /api/dialogue/move
\f0\fs24  to write commitments when 
\f2\fs26 CONCEDE
\f0\fs24 /
\f2\fs26 RETRACT
\f0\fs24  land; add 
\f2\fs26 /api/dialogue/commitments
\f0\fs24 . \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Soft relevance now; strict relevance offline.
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  True relevance (flip root\'92s status) is expensive but necessary for high\uc0\u8209 quality rooms. We can ship soft guards immediately (target unresolved loci), while a job recomputes strict relevance badges. \
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  Extend 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  to mark moves \'93likely irrelevant\'94; add a nightly job to annotate moves with strict relevance results, and surface chips in the panel. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Asymmetric burden toggle & AF integration.
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  Legal/policy rooms often require strict defeat for proponents; expose this as a room pref and reflect it in AF status/labels. \
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  Add 
\f2\fs26 deliberation.prefs.asymmetricProof
\f0\fs24  and adapt 
\f2\fs26 lib/deepdive/af.ts
\f0\fs24  status computation (strict vs normal defeat). UI: badge in RightRail. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Presupposition challenges (already detected, not surfaced).
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  
\f2\fs26 lib/dialogue/legalMoves.ts
\f0\fs24  can detect \'93loaded\'94 presupposition cues; hook this into the WHY/CQ flow so users can challenge presuppositions as first\uc0\u8209 class attacks. \
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  When 
\f2\fs26 detectShape(text) === 'presupposition'
\f0\fs24 , offer a \'93Challenge presupposition\'94 WHY with a labeled payload; ensure 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24  suggests it when relevant. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Support edges and VAF lens (planning hooks exist, finalize).
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why:
\f0\b0  Separate support from defense, and allow audience/value orderings (objective vs subjective acceptance). The Prisma + helper that maps ArgumentEdge\uc0\u8594 ClaimEdge is already moving in this direction\'97complete the loop. \
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where:
\f0\b0  Confirm 
\f2\fs26 EdgeType
\f0\fs24  and 
\f2\fs26 ClaimAttackType
\f0\fs24  enums cover 
\f2\fs26 support/rebut/undercut
\f0\fs24  and scopes; add Value/Audience tables and minimal calculations for Obj/Sub acceptance chips. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Consistency & API cleanliness.
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls87\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bus usage:
\f0\b0  Standardize on one emitter (
\f2\fs26 emitBus
\f0\fs24  vs 
\f2\fs26 bus.emitEvent
\f0\fs24 ) so clients don\'92t miss events. \
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Auth:
\f0\b0  
\f2\fs26 legal-moves
\f0\fs24  currently unauthenticated; if room policies vary by role/participant, require auth to compute permissible moves. \
\ls87\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Design selection:
\f0\b0  The 
\f2\fs26 stepInteraction
\f0\fs24  fallback picks designs by naive order; resolve P/O by participant mapping for stability. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls87\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Interchange & synthesis.
\f0\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls88\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AIF export:
\f0\b0  Keep in the plan (not yet in code) so arguments/links map to I\uc0\u8209 /S\u8209 nodes for external analysis. \
\ls88\ilvl0
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Representative Viewpoints:
\f0\b0  You already have ViewpointSelection + Decision receipts; wire the selection service to AF status + approvals so \'93receipt \uc0\u8594  chosen viewpoint \u8594  AF snapshot\'94 is fully auditable. \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f1\b\fs36 \cf0 \strokec2 D) Short PR stack (sequenced, low\uc0\u8209 risk, high\u8209 impact)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls89\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reply structure & R4/R5/R7 guardrails
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls89\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files:
\f0\b0  Prisma (DialogueMove), 
\f2\fs26 /api/dialogue/move
\f0\fs24 , 
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24 , 
\f2\fs26 lib/dialogue/legalMoves.ts
\f0\fs24 .\
\ls89\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks:
\f0\b0  Attempting an attack after surrender is blocked; attempting 
\f3\i Concede \uc0\u966 
\f0\i0  when an argument answered 
\f3\i why \uc0\u966 
\f0\i0  yields \'93Accept argument\'94 action.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls89\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Signature unification & unique index
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls89\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files:
\f0\b0  
\f2\fs26 lib/dialogue/signature.ts
\f0\fs24 , 
\f2\fs26 /api/dialogue/move
\f0\fs24  (use the shared function), Prisma unique on 
\f2\fs26 (deliberationId, signature)
\f0\fs24 .\
\ls89\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks:
\f0\b0  Double\uc0\u8209 submit on WHY/GROUNDS/CLOSE dedups reliably; other kinds behave predictably.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls89\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Commitment store
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls89\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files:
\f0\b0  Prisma (Commitment), 
\f2\fs26 /api/dialogue/move
\f0\fs24  (derive), 
\f2\fs26 /api/dialogue/commitments
\f0\fs24  (read).\
\ls89\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks:
\f0\b0  CONCEDE adds a row; RETRACT flips 
\f2\fs26 isRetracted
\f0\fs24 ; commitments render in UI. \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls89\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Soft relevance badges + presupposition challenges
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls89\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files:
\f0\b0  
\f2\fs26 /api/dialogue/legal-moves
\f0\fs24 , 
\f2\fs26 lib/dialogue/legalMoves.ts
\f0\fs24 , UI badges.\
\ls89\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks:
\f0\b0  Irrelevant moves get a warning; presupposition CQs appear when detected.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls89\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Asymmetric burden toggle & AF
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls89\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files:
\f0\b0  Prisma (prefs), 
\f2\fs26 lib/deepdive/af.ts
\f0\fs24 , UI chips.\
\ls89\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks:
\f0\b0  Toggling flips certain branches IN\uc0\u8594 OUT under strict defeat; labels update.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls89\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Support/VAF minimal slice
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls89\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files:
\f0\b0  Prisma (values/audiences), AF adaptor, RightRail lens.\
\ls89\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks:
\f0\b0  Selecting an audience re\uc0\u8209 colors acceptance (Obj/Sub). \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls89\ilvl0
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AIF export + Decision receipts wiring
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls89\ilvl1
\f1\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Files:
\f0\b0  
\f2\fs26 /api/deliberations/[id]/aif
\f0\fs24 , serializer, DecisionReceipt \uc0\u8596  selection pipeline.\
\ls89\ilvl1
\f1\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks:
\f0\b0  Export imports cleanly in AIF tools; receipts link to AF snapshot and selected viewpoint.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f1\b\fs28 \cf0 \strokec2 Why I\'92m confident this is \'93last missing pieces\'94\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls90\ilvl0
\f0\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The 
\f1\b research compendium
\f0\b0  gives us the exact invariants to enforce (reply tree, attack/surrender, R4/R5/R7, public semantics, relevance, turn/termination), and we\'92ve mapped each to server/DB/UI changes. \
\ls90\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The 
\f1\b v2 roadmap
\f0\b0  already anticipates many of these (commitments, asymmetric proof, schemes/CQs as moves, Ludics hooks, AIF), and this audit just snaps them precisely to the code you\'92ve uploaded.\
\ls90\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The 
\f1\b current APIs/libs
\f0\b0  are close: idempotent inserts, CQ\uc0\u8209 aware legal moves, Ludics compile/step, AF utilities, claim\u8209 edge helpers, and decision receipts are all in reach\'97this is wiring + invariants work, not a rewrite.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 If you want, I can start with PR\uc0\u8209 1 (
\f1\b reply structure + R4/R5/R7
\f0\b0 ) and PR\uc0\u8209 2 (
\f1\b signature unification
\f0\b0 ) immediately; everything else chains cleanly from there.\
}