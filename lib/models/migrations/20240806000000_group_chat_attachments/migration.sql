ALTER TABLE conversations
  ADD COLUMN IF NOT EXISTS title text,
  ADD COLUMN IF NOT EXISTS is_group boolean NOT NULL DEFAULT false,
  ALTER COLUMN user1_id DROP NOT NULL,
  ALTER COLUMN user2_id DROP NOT NULL;

CREATE TABLE IF NOT EXISTS conversation_participants (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  conversation_id bigint NOT NULL REFERENCES conversations(id) ON DELETE CASCADE,
  user_id bigint NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  joined_at timestamptz NOT NULL DEFAULT now(),
  CONSTRAINT conversation_participants_conversation_id_user_id_key UNIQUE (conversation_id, user_id)
);

-- Helpful indexes
CREATE INDEX IF NOT EXISTS conversation_participants_user_id_idx
  ON conversation_participants (user_id);

CREATE TABLE IF NOT EXISTS message_attachments (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamptz NOT NULL DEFAULT now(),
  message_id bigint NOT NULL REFERENCES messages(id) ON DELETE CASCADE,
  url text NOT NULL,
  type text NOT NULL,
  size integer NOT NULL,
  metadata jsonb
);

CREATE INDEX IF NOT EXISTS message_attachments_message_id_idx
  ON message_attachments (message_id);

ALTER TABLE messages
  ALTER COLUMN text DROP NOT NULL;

-- Replace single-column index with compound index for pagination
DROP INDEX IF EXISTS messages_conversation_id_idx;
CREATE INDEX IF NOT EXISTS messages_conversation_id_created_at_idx
  ON messages (conversation_id, created_at);
SQL